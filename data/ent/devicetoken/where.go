// Code generated by ent, DO NOT EDIT.

package devicetoken

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"gitlab.ctyuncdn.cn/ias/ias-core/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldDeletedAt, v))
}

// Token applies equality check predicate on the "token" field. It's identical to TokenEQ.
func Token(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldToken, v))
}

// DeviceExtID applies equality check predicate on the "device_ext_id" field. It's identical to DeviceExtIDEQ.
func DeviceExtID(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldDeviceExtID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNotNull(FieldDeletedAt))
}

// TokenEQ applies the EQ predicate on the "token" field.
func TokenEQ(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldToken, v))
}

// TokenNEQ applies the NEQ predicate on the "token" field.
func TokenNEQ(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNEQ(FieldToken, v))
}

// TokenIn applies the In predicate on the "token" field.
func TokenIn(vs ...string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldIn(FieldToken, vs...))
}

// TokenNotIn applies the NotIn predicate on the "token" field.
func TokenNotIn(vs ...string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNotIn(FieldToken, vs...))
}

// TokenGT applies the GT predicate on the "token" field.
func TokenGT(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGT(FieldToken, v))
}

// TokenGTE applies the GTE predicate on the "token" field.
func TokenGTE(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGTE(FieldToken, v))
}

// TokenLT applies the LT predicate on the "token" field.
func TokenLT(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLT(FieldToken, v))
}

// TokenLTE applies the LTE predicate on the "token" field.
func TokenLTE(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLTE(FieldToken, v))
}

// TokenContains applies the Contains predicate on the "token" field.
func TokenContains(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldContains(FieldToken, v))
}

// TokenHasPrefix applies the HasPrefix predicate on the "token" field.
func TokenHasPrefix(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldHasPrefix(FieldToken, v))
}

// TokenHasSuffix applies the HasSuffix predicate on the "token" field.
func TokenHasSuffix(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldHasSuffix(FieldToken, v))
}

// TokenEqualFold applies the EqualFold predicate on the "token" field.
func TokenEqualFold(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEqualFold(FieldToken, v))
}

// TokenContainsFold applies the ContainsFold predicate on the "token" field.
func TokenContainsFold(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldContainsFold(FieldToken, v))
}

// DeviceExtIDEQ applies the EQ predicate on the "device_ext_id" field.
func DeviceExtIDEQ(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEQ(FieldDeviceExtID, v))
}

// DeviceExtIDNEQ applies the NEQ predicate on the "device_ext_id" field.
func DeviceExtIDNEQ(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNEQ(FieldDeviceExtID, v))
}

// DeviceExtIDIn applies the In predicate on the "device_ext_id" field.
func DeviceExtIDIn(vs ...string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldIn(FieldDeviceExtID, vs...))
}

// DeviceExtIDNotIn applies the NotIn predicate on the "device_ext_id" field.
func DeviceExtIDNotIn(vs ...string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldNotIn(FieldDeviceExtID, vs...))
}

// DeviceExtIDGT applies the GT predicate on the "device_ext_id" field.
func DeviceExtIDGT(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGT(FieldDeviceExtID, v))
}

// DeviceExtIDGTE applies the GTE predicate on the "device_ext_id" field.
func DeviceExtIDGTE(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldGTE(FieldDeviceExtID, v))
}

// DeviceExtIDLT applies the LT predicate on the "device_ext_id" field.
func DeviceExtIDLT(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLT(FieldDeviceExtID, v))
}

// DeviceExtIDLTE applies the LTE predicate on the "device_ext_id" field.
func DeviceExtIDLTE(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldLTE(FieldDeviceExtID, v))
}

// DeviceExtIDContains applies the Contains predicate on the "device_ext_id" field.
func DeviceExtIDContains(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldContains(FieldDeviceExtID, v))
}

// DeviceExtIDHasPrefix applies the HasPrefix predicate on the "device_ext_id" field.
func DeviceExtIDHasPrefix(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldHasPrefix(FieldDeviceExtID, v))
}

// DeviceExtIDHasSuffix applies the HasSuffix predicate on the "device_ext_id" field.
func DeviceExtIDHasSuffix(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldHasSuffix(FieldDeviceExtID, v))
}

// DeviceExtIDEqualFold applies the EqualFold predicate on the "device_ext_id" field.
func DeviceExtIDEqualFold(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldEqualFold(FieldDeviceExtID, v))
}

// DeviceExtIDContainsFold applies the ContainsFold predicate on the "device_ext_id" field.
func DeviceExtIDContainsFold(v string) predicate.DeviceToken {
	return predicate.DeviceToken(sql.FieldContainsFold(FieldDeviceExtID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.DeviceToken) predicate.DeviceToken {
	return predicate.DeviceToken(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.DeviceToken) predicate.DeviceToken {
	return predicate.DeviceToken(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.DeviceToken) predicate.DeviceToken {
	return predicate.DeviceToken(sql.NotPredicates(p))
}
