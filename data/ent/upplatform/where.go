// Code generated by ent, DO NOT EDIT.

package upplatform

import (
	"entgo.io/ent/dialect/sql"
	"github.com/blues120/ias-core/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldTenantID, v))
}

// AccessOrgList applies equality check predicate on the "access_org_list" field. It's identical to AccessOrgListEQ.
func AccessOrgList(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldAccessOrgList, v))
}

// SipID applies equality check predicate on the "sip_id" field. It's identical to SipIDEQ.
func SipID(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipID, v))
}

// SipDomain applies equality check predicate on the "sip_domain" field. It's identical to SipDomainEQ.
func SipDomain(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipDomain, v))
}

// SipIP applies equality check predicate on the "sip_ip" field. It's identical to SipIPEQ.
func SipIP(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipIP, v))
}

// SipPort applies equality check predicate on the "sip_port" field. It's identical to SipPortEQ.
func SipPort(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipPort, v))
}

// SipUser applies equality check predicate on the "sip_user" field. It's identical to SipUserEQ.
func SipUser(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipUser, v))
}

// SipPassword applies equality check predicate on the "sip_password" field. It's identical to SipPasswordEQ.
func SipPassword(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipPassword, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldDescription, v))
}

// HeartbeatInterval applies equality check predicate on the "heartbeat_interval" field. It's identical to HeartbeatIntervalEQ.
func HeartbeatInterval(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldHeartbeatInterval, v))
}

// RegisterInterval applies equality check predicate on the "register_interval" field. It's identical to RegisterIntervalEQ.
func RegisterInterval(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldRegisterInterval, v))
}

// TransType applies equality check predicate on the "trans_type" field. It's identical to TransTypeEQ.
func TransType(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldTransType, v))
}

// GBID applies equality check predicate on the "gb_id" field. It's identical to GBIDEQ.
func GBID(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldGBID, v))
}

// Cascadestatus applies equality check predicate on the "cascadestatus" field. It's identical to CascadestatusEQ.
func Cascadestatus(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldCascadestatus, v))
}

// RegistrationStatus applies equality check predicate on the "registration_status" field. It's identical to RegistrationStatusEQ.
func RegistrationStatus(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldRegistrationStatus, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldTenantID, v))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldTenantID, v))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldTenantID, v))
}

// TenantIDIsNil applies the IsNil predicate on the "tenant_id" field.
func TenantIDIsNil() predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIsNull(FieldTenantID))
}

// TenantIDNotNil applies the NotNil predicate on the "tenant_id" field.
func TenantIDNotNil() predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotNull(FieldTenantID))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldTenantID, v))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldTenantID, v))
}

// AccessOrgListEQ applies the EQ predicate on the "access_org_list" field.
func AccessOrgListEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldAccessOrgList, v))
}

// AccessOrgListNEQ applies the NEQ predicate on the "access_org_list" field.
func AccessOrgListNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldAccessOrgList, v))
}

// AccessOrgListIn applies the In predicate on the "access_org_list" field.
func AccessOrgListIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldAccessOrgList, vs...))
}

// AccessOrgListNotIn applies the NotIn predicate on the "access_org_list" field.
func AccessOrgListNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldAccessOrgList, vs...))
}

// AccessOrgListGT applies the GT predicate on the "access_org_list" field.
func AccessOrgListGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldAccessOrgList, v))
}

// AccessOrgListGTE applies the GTE predicate on the "access_org_list" field.
func AccessOrgListGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldAccessOrgList, v))
}

// AccessOrgListLT applies the LT predicate on the "access_org_list" field.
func AccessOrgListLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldAccessOrgList, v))
}

// AccessOrgListLTE applies the LTE predicate on the "access_org_list" field.
func AccessOrgListLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldAccessOrgList, v))
}

// AccessOrgListContains applies the Contains predicate on the "access_org_list" field.
func AccessOrgListContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldAccessOrgList, v))
}

// AccessOrgListHasPrefix applies the HasPrefix predicate on the "access_org_list" field.
func AccessOrgListHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldAccessOrgList, v))
}

// AccessOrgListHasSuffix applies the HasSuffix predicate on the "access_org_list" field.
func AccessOrgListHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldAccessOrgList, v))
}

// AccessOrgListIsNil applies the IsNil predicate on the "access_org_list" field.
func AccessOrgListIsNil() predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIsNull(FieldAccessOrgList))
}

// AccessOrgListNotNil applies the NotNil predicate on the "access_org_list" field.
func AccessOrgListNotNil() predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotNull(FieldAccessOrgList))
}

// AccessOrgListEqualFold applies the EqualFold predicate on the "access_org_list" field.
func AccessOrgListEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldAccessOrgList, v))
}

// AccessOrgListContainsFold applies the ContainsFold predicate on the "access_org_list" field.
func AccessOrgListContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldAccessOrgList, v))
}

// SipIDEQ applies the EQ predicate on the "sip_id" field.
func SipIDEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipID, v))
}

// SipIDNEQ applies the NEQ predicate on the "sip_id" field.
func SipIDNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldSipID, v))
}

// SipIDIn applies the In predicate on the "sip_id" field.
func SipIDIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldSipID, vs...))
}

// SipIDNotIn applies the NotIn predicate on the "sip_id" field.
func SipIDNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldSipID, vs...))
}

// SipIDGT applies the GT predicate on the "sip_id" field.
func SipIDGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldSipID, v))
}

// SipIDGTE applies the GTE predicate on the "sip_id" field.
func SipIDGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldSipID, v))
}

// SipIDLT applies the LT predicate on the "sip_id" field.
func SipIDLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldSipID, v))
}

// SipIDLTE applies the LTE predicate on the "sip_id" field.
func SipIDLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldSipID, v))
}

// SipIDContains applies the Contains predicate on the "sip_id" field.
func SipIDContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldSipID, v))
}

// SipIDHasPrefix applies the HasPrefix predicate on the "sip_id" field.
func SipIDHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldSipID, v))
}

// SipIDHasSuffix applies the HasSuffix predicate on the "sip_id" field.
func SipIDHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldSipID, v))
}

// SipIDEqualFold applies the EqualFold predicate on the "sip_id" field.
func SipIDEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldSipID, v))
}

// SipIDContainsFold applies the ContainsFold predicate on the "sip_id" field.
func SipIDContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldSipID, v))
}

// SipDomainEQ applies the EQ predicate on the "sip_domain" field.
func SipDomainEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipDomain, v))
}

// SipDomainNEQ applies the NEQ predicate on the "sip_domain" field.
func SipDomainNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldSipDomain, v))
}

// SipDomainIn applies the In predicate on the "sip_domain" field.
func SipDomainIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldSipDomain, vs...))
}

// SipDomainNotIn applies the NotIn predicate on the "sip_domain" field.
func SipDomainNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldSipDomain, vs...))
}

// SipDomainGT applies the GT predicate on the "sip_domain" field.
func SipDomainGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldSipDomain, v))
}

// SipDomainGTE applies the GTE predicate on the "sip_domain" field.
func SipDomainGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldSipDomain, v))
}

// SipDomainLT applies the LT predicate on the "sip_domain" field.
func SipDomainLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldSipDomain, v))
}

// SipDomainLTE applies the LTE predicate on the "sip_domain" field.
func SipDomainLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldSipDomain, v))
}

// SipDomainContains applies the Contains predicate on the "sip_domain" field.
func SipDomainContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldSipDomain, v))
}

// SipDomainHasPrefix applies the HasPrefix predicate on the "sip_domain" field.
func SipDomainHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldSipDomain, v))
}

// SipDomainHasSuffix applies the HasSuffix predicate on the "sip_domain" field.
func SipDomainHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldSipDomain, v))
}

// SipDomainEqualFold applies the EqualFold predicate on the "sip_domain" field.
func SipDomainEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldSipDomain, v))
}

// SipDomainContainsFold applies the ContainsFold predicate on the "sip_domain" field.
func SipDomainContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldSipDomain, v))
}

// SipIPEQ applies the EQ predicate on the "sip_ip" field.
func SipIPEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipIP, v))
}

// SipIPNEQ applies the NEQ predicate on the "sip_ip" field.
func SipIPNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldSipIP, v))
}

// SipIPIn applies the In predicate on the "sip_ip" field.
func SipIPIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldSipIP, vs...))
}

// SipIPNotIn applies the NotIn predicate on the "sip_ip" field.
func SipIPNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldSipIP, vs...))
}

// SipIPGT applies the GT predicate on the "sip_ip" field.
func SipIPGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldSipIP, v))
}

// SipIPGTE applies the GTE predicate on the "sip_ip" field.
func SipIPGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldSipIP, v))
}

// SipIPLT applies the LT predicate on the "sip_ip" field.
func SipIPLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldSipIP, v))
}

// SipIPLTE applies the LTE predicate on the "sip_ip" field.
func SipIPLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldSipIP, v))
}

// SipIPContains applies the Contains predicate on the "sip_ip" field.
func SipIPContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldSipIP, v))
}

// SipIPHasPrefix applies the HasPrefix predicate on the "sip_ip" field.
func SipIPHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldSipIP, v))
}

// SipIPHasSuffix applies the HasSuffix predicate on the "sip_ip" field.
func SipIPHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldSipIP, v))
}

// SipIPEqualFold applies the EqualFold predicate on the "sip_ip" field.
func SipIPEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldSipIP, v))
}

// SipIPContainsFold applies the ContainsFold predicate on the "sip_ip" field.
func SipIPContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldSipIP, v))
}

// SipPortEQ applies the EQ predicate on the "sip_port" field.
func SipPortEQ(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipPort, v))
}

// SipPortNEQ applies the NEQ predicate on the "sip_port" field.
func SipPortNEQ(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldSipPort, v))
}

// SipPortIn applies the In predicate on the "sip_port" field.
func SipPortIn(vs ...int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldSipPort, vs...))
}

// SipPortNotIn applies the NotIn predicate on the "sip_port" field.
func SipPortNotIn(vs ...int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldSipPort, vs...))
}

// SipPortGT applies the GT predicate on the "sip_port" field.
func SipPortGT(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldSipPort, v))
}

// SipPortGTE applies the GTE predicate on the "sip_port" field.
func SipPortGTE(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldSipPort, v))
}

// SipPortLT applies the LT predicate on the "sip_port" field.
func SipPortLT(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldSipPort, v))
}

// SipPortLTE applies the LTE predicate on the "sip_port" field.
func SipPortLTE(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldSipPort, v))
}

// SipUserEQ applies the EQ predicate on the "sip_user" field.
func SipUserEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipUser, v))
}

// SipUserNEQ applies the NEQ predicate on the "sip_user" field.
func SipUserNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldSipUser, v))
}

// SipUserIn applies the In predicate on the "sip_user" field.
func SipUserIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldSipUser, vs...))
}

// SipUserNotIn applies the NotIn predicate on the "sip_user" field.
func SipUserNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldSipUser, vs...))
}

// SipUserGT applies the GT predicate on the "sip_user" field.
func SipUserGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldSipUser, v))
}

// SipUserGTE applies the GTE predicate on the "sip_user" field.
func SipUserGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldSipUser, v))
}

// SipUserLT applies the LT predicate on the "sip_user" field.
func SipUserLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldSipUser, v))
}

// SipUserLTE applies the LTE predicate on the "sip_user" field.
func SipUserLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldSipUser, v))
}

// SipUserContains applies the Contains predicate on the "sip_user" field.
func SipUserContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldSipUser, v))
}

// SipUserHasPrefix applies the HasPrefix predicate on the "sip_user" field.
func SipUserHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldSipUser, v))
}

// SipUserHasSuffix applies the HasSuffix predicate on the "sip_user" field.
func SipUserHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldSipUser, v))
}

// SipUserEqualFold applies the EqualFold predicate on the "sip_user" field.
func SipUserEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldSipUser, v))
}

// SipUserContainsFold applies the ContainsFold predicate on the "sip_user" field.
func SipUserContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldSipUser, v))
}

// SipPasswordEQ applies the EQ predicate on the "sip_password" field.
func SipPasswordEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldSipPassword, v))
}

// SipPasswordNEQ applies the NEQ predicate on the "sip_password" field.
func SipPasswordNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldSipPassword, v))
}

// SipPasswordIn applies the In predicate on the "sip_password" field.
func SipPasswordIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldSipPassword, vs...))
}

// SipPasswordNotIn applies the NotIn predicate on the "sip_password" field.
func SipPasswordNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldSipPassword, vs...))
}

// SipPasswordGT applies the GT predicate on the "sip_password" field.
func SipPasswordGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldSipPassword, v))
}

// SipPasswordGTE applies the GTE predicate on the "sip_password" field.
func SipPasswordGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldSipPassword, v))
}

// SipPasswordLT applies the LT predicate on the "sip_password" field.
func SipPasswordLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldSipPassword, v))
}

// SipPasswordLTE applies the LTE predicate on the "sip_password" field.
func SipPasswordLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldSipPassword, v))
}

// SipPasswordContains applies the Contains predicate on the "sip_password" field.
func SipPasswordContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldSipPassword, v))
}

// SipPasswordHasPrefix applies the HasPrefix predicate on the "sip_password" field.
func SipPasswordHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldSipPassword, v))
}

// SipPasswordHasSuffix applies the HasSuffix predicate on the "sip_password" field.
func SipPasswordHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldSipPassword, v))
}

// SipPasswordEqualFold applies the EqualFold predicate on the "sip_password" field.
func SipPasswordEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldSipPassword, v))
}

// SipPasswordContainsFold applies the ContainsFold predicate on the "sip_password" field.
func SipPasswordContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldSipPassword, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldDescription, v))
}

// HeartbeatIntervalEQ applies the EQ predicate on the "heartbeat_interval" field.
func HeartbeatIntervalEQ(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldHeartbeatInterval, v))
}

// HeartbeatIntervalNEQ applies the NEQ predicate on the "heartbeat_interval" field.
func HeartbeatIntervalNEQ(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldHeartbeatInterval, v))
}

// HeartbeatIntervalIn applies the In predicate on the "heartbeat_interval" field.
func HeartbeatIntervalIn(vs ...int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldHeartbeatInterval, vs...))
}

// HeartbeatIntervalNotIn applies the NotIn predicate on the "heartbeat_interval" field.
func HeartbeatIntervalNotIn(vs ...int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldHeartbeatInterval, vs...))
}

// HeartbeatIntervalGT applies the GT predicate on the "heartbeat_interval" field.
func HeartbeatIntervalGT(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldHeartbeatInterval, v))
}

// HeartbeatIntervalGTE applies the GTE predicate on the "heartbeat_interval" field.
func HeartbeatIntervalGTE(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldHeartbeatInterval, v))
}

// HeartbeatIntervalLT applies the LT predicate on the "heartbeat_interval" field.
func HeartbeatIntervalLT(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldHeartbeatInterval, v))
}

// HeartbeatIntervalLTE applies the LTE predicate on the "heartbeat_interval" field.
func HeartbeatIntervalLTE(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldHeartbeatInterval, v))
}

// RegisterIntervalEQ applies the EQ predicate on the "register_interval" field.
func RegisterIntervalEQ(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldRegisterInterval, v))
}

// RegisterIntervalNEQ applies the NEQ predicate on the "register_interval" field.
func RegisterIntervalNEQ(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldRegisterInterval, v))
}

// RegisterIntervalIn applies the In predicate on the "register_interval" field.
func RegisterIntervalIn(vs ...int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldRegisterInterval, vs...))
}

// RegisterIntervalNotIn applies the NotIn predicate on the "register_interval" field.
func RegisterIntervalNotIn(vs ...int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldRegisterInterval, vs...))
}

// RegisterIntervalGT applies the GT predicate on the "register_interval" field.
func RegisterIntervalGT(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldRegisterInterval, v))
}

// RegisterIntervalGTE applies the GTE predicate on the "register_interval" field.
func RegisterIntervalGTE(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldRegisterInterval, v))
}

// RegisterIntervalLT applies the LT predicate on the "register_interval" field.
func RegisterIntervalLT(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldRegisterInterval, v))
}

// RegisterIntervalLTE applies the LTE predicate on the "register_interval" field.
func RegisterIntervalLTE(v int32) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldRegisterInterval, v))
}

// TransTypeEQ applies the EQ predicate on the "trans_type" field.
func TransTypeEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldTransType, v))
}

// TransTypeNEQ applies the NEQ predicate on the "trans_type" field.
func TransTypeNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldTransType, v))
}

// TransTypeIn applies the In predicate on the "trans_type" field.
func TransTypeIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldTransType, vs...))
}

// TransTypeNotIn applies the NotIn predicate on the "trans_type" field.
func TransTypeNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldTransType, vs...))
}

// TransTypeGT applies the GT predicate on the "trans_type" field.
func TransTypeGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldTransType, v))
}

// TransTypeGTE applies the GTE predicate on the "trans_type" field.
func TransTypeGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldTransType, v))
}

// TransTypeLT applies the LT predicate on the "trans_type" field.
func TransTypeLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldTransType, v))
}

// TransTypeLTE applies the LTE predicate on the "trans_type" field.
func TransTypeLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldTransType, v))
}

// TransTypeContains applies the Contains predicate on the "trans_type" field.
func TransTypeContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldTransType, v))
}

// TransTypeHasPrefix applies the HasPrefix predicate on the "trans_type" field.
func TransTypeHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldTransType, v))
}

// TransTypeHasSuffix applies the HasSuffix predicate on the "trans_type" field.
func TransTypeHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldTransType, v))
}

// TransTypeEqualFold applies the EqualFold predicate on the "trans_type" field.
func TransTypeEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldTransType, v))
}

// TransTypeContainsFold applies the ContainsFold predicate on the "trans_type" field.
func TransTypeContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldTransType, v))
}

// GBIDEQ applies the EQ predicate on the "gb_id" field.
func GBIDEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldGBID, v))
}

// GBIDNEQ applies the NEQ predicate on the "gb_id" field.
func GBIDNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldGBID, v))
}

// GBIDIn applies the In predicate on the "gb_id" field.
func GBIDIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldGBID, vs...))
}

// GBIDNotIn applies the NotIn predicate on the "gb_id" field.
func GBIDNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldGBID, vs...))
}

// GBIDGT applies the GT predicate on the "gb_id" field.
func GBIDGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldGBID, v))
}

// GBIDGTE applies the GTE predicate on the "gb_id" field.
func GBIDGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldGBID, v))
}

// GBIDLT applies the LT predicate on the "gb_id" field.
func GBIDLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldGBID, v))
}

// GBIDLTE applies the LTE predicate on the "gb_id" field.
func GBIDLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldGBID, v))
}

// GBIDContains applies the Contains predicate on the "gb_id" field.
func GBIDContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldGBID, v))
}

// GBIDHasPrefix applies the HasPrefix predicate on the "gb_id" field.
func GBIDHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldGBID, v))
}

// GBIDHasSuffix applies the HasSuffix predicate on the "gb_id" field.
func GBIDHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldGBID, v))
}

// GBIDEqualFold applies the EqualFold predicate on the "gb_id" field.
func GBIDEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldGBID, v))
}

// GBIDContainsFold applies the ContainsFold predicate on the "gb_id" field.
func GBIDContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldGBID, v))
}

// CascadestatusEQ applies the EQ predicate on the "cascadestatus" field.
func CascadestatusEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldCascadestatus, v))
}

// CascadestatusNEQ applies the NEQ predicate on the "cascadestatus" field.
func CascadestatusNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldCascadestatus, v))
}

// CascadestatusIn applies the In predicate on the "cascadestatus" field.
func CascadestatusIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldCascadestatus, vs...))
}

// CascadestatusNotIn applies the NotIn predicate on the "cascadestatus" field.
func CascadestatusNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldCascadestatus, vs...))
}

// CascadestatusGT applies the GT predicate on the "cascadestatus" field.
func CascadestatusGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldCascadestatus, v))
}

// CascadestatusGTE applies the GTE predicate on the "cascadestatus" field.
func CascadestatusGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldCascadestatus, v))
}

// CascadestatusLT applies the LT predicate on the "cascadestatus" field.
func CascadestatusLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldCascadestatus, v))
}

// CascadestatusLTE applies the LTE predicate on the "cascadestatus" field.
func CascadestatusLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldCascadestatus, v))
}

// CascadestatusContains applies the Contains predicate on the "cascadestatus" field.
func CascadestatusContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldCascadestatus, v))
}

// CascadestatusHasPrefix applies the HasPrefix predicate on the "cascadestatus" field.
func CascadestatusHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldCascadestatus, v))
}

// CascadestatusHasSuffix applies the HasSuffix predicate on the "cascadestatus" field.
func CascadestatusHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldCascadestatus, v))
}

// CascadestatusEqualFold applies the EqualFold predicate on the "cascadestatus" field.
func CascadestatusEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldCascadestatus, v))
}

// CascadestatusContainsFold applies the ContainsFold predicate on the "cascadestatus" field.
func CascadestatusContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldCascadestatus, v))
}

// RegistrationStatusEQ applies the EQ predicate on the "registration_status" field.
func RegistrationStatusEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEQ(FieldRegistrationStatus, v))
}

// RegistrationStatusNEQ applies the NEQ predicate on the "registration_status" field.
func RegistrationStatusNEQ(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNEQ(FieldRegistrationStatus, v))
}

// RegistrationStatusIn applies the In predicate on the "registration_status" field.
func RegistrationStatusIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldIn(FieldRegistrationStatus, vs...))
}

// RegistrationStatusNotIn applies the NotIn predicate on the "registration_status" field.
func RegistrationStatusNotIn(vs ...string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldNotIn(FieldRegistrationStatus, vs...))
}

// RegistrationStatusGT applies the GT predicate on the "registration_status" field.
func RegistrationStatusGT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGT(FieldRegistrationStatus, v))
}

// RegistrationStatusGTE applies the GTE predicate on the "registration_status" field.
func RegistrationStatusGTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldGTE(FieldRegistrationStatus, v))
}

// RegistrationStatusLT applies the LT predicate on the "registration_status" field.
func RegistrationStatusLT(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLT(FieldRegistrationStatus, v))
}

// RegistrationStatusLTE applies the LTE predicate on the "registration_status" field.
func RegistrationStatusLTE(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldLTE(FieldRegistrationStatus, v))
}

// RegistrationStatusContains applies the Contains predicate on the "registration_status" field.
func RegistrationStatusContains(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContains(FieldRegistrationStatus, v))
}

// RegistrationStatusHasPrefix applies the HasPrefix predicate on the "registration_status" field.
func RegistrationStatusHasPrefix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasPrefix(FieldRegistrationStatus, v))
}

// RegistrationStatusHasSuffix applies the HasSuffix predicate on the "registration_status" field.
func RegistrationStatusHasSuffix(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldHasSuffix(FieldRegistrationStatus, v))
}

// RegistrationStatusEqualFold applies the EqualFold predicate on the "registration_status" field.
func RegistrationStatusEqualFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldEqualFold(FieldRegistrationStatus, v))
}

// RegistrationStatusContainsFold applies the ContainsFold predicate on the "registration_status" field.
func RegistrationStatusContainsFold(v string) predicate.UpPlatform {
	return predicate.UpPlatform(sql.FieldContainsFold(FieldRegistrationStatus, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.UpPlatform) predicate.UpPlatform {
	return predicate.UpPlatform(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.UpPlatform) predicate.UpPlatform {
	return predicate.UpPlatform(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.UpPlatform) predicate.UpPlatform {
	return predicate.UpPlatform(sql.NotPredicates(p))
}
