// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ActiveInfoColumns holds the columns for the "active_info" table.
	ActiveInfoColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "process_id", Type: field.TypeString, Comment: "流程id"},
		{Name: "start_time", Type: field.TypeString, Comment: "激活开始时间"},
		{Name: "result", Type: field.TypeString, Comment: "激活结果"},
		{Name: "msg", Type: field.TypeString, Comment: "消息"},
	}
	// ActiveInfoTable holds the schema information for the "active_info" table.
	ActiveInfoTable = &schema.Table{
		Name:       "active_info",
		Columns:    ActiveInfoColumns,
		PrimaryKey: []*schema.Column{ActiveInfoColumns[0]},
	}
	// AlgorithmColumns holds the columns for the "algorithm" table.
	AlgorithmColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "name", Type: field.TypeString, Comment: "算法名称"},
		{Name: "type", Type: field.TypeString, Comment: "算法类型:图片帧image/视频流video"},
		{Name: "description", Type: field.TypeString, Comment: "算法描述"},
		{Name: "version", Type: field.TypeString, Comment: "算法版本"},
		{Name: "app_name", Type: field.TypeString, Comment: "应用名称"},
		{Name: "alarm_type", Type: field.TypeString, Comment: "告警类型"},
		{Name: "alarm_name", Type: field.TypeString, Comment: "告警名称"},
		{Name: "notify", Type: field.TypeUint, Comment: "是否告警"},
		{Name: "extend", Type: field.TypeJSON, Comment: "非通用属性"},
		{Name: "draw_type", Type: field.TypeUint, Comment: "绘制区域类型 多边形区域/流量方向及界线 1/2"},
		{Name: "base_type", Type: field.TypeUint, Comment: "底库类型 无/人员/车辆 0/1/2"},
		{Name: "available", Type: field.TypeUint, Comment: "是否可用 默认为1,不可用为0", Default: 1},
		{Name: "image", Type: field.TypeString, Size: 1000, Comment: "算法镜像"},
		{Name: "label_map", Type: field.TypeString, Nullable: true, Size: 2000, Comment: "英中文label映射"},
		{Name: "target", Type: field.TypeString, Nullable: true, Comment: "检测目标"},
		{Name: "algo_name_en", Type: field.TypeString, Nullable: true, Comment: "算法英文名，下发给agent配置需要"},
		{Name: "algo_group_id", Type: field.TypeUint, Nullable: true, Comment: "算法组ID"},
		{Name: "algo_group_name", Type: field.TypeString, Nullable: true, Comment: "算法组name(如十二合一算法)，前端显示用"},
		{Name: "algo_group_version", Type: field.TypeString, Nullable: true, Comment: "算法组版本号，用于算法组整体更新场景"},
		{Name: "config", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "算法特有配置，如算能算法的单独配置"},
		{Name: "provider", Type: field.TypeString, Nullable: true, Comment: "算法供应商 ctyun_ias/sophgo_park/sophgo_city"},
		{Name: "algo_id", Type: field.TypeString, Nullable: true, Comment: "算法 id，非自增 id，用于填充园区算法 alg_flag 字段（使用时需转换为 Uint）"},
		{Name: "platform", Type: field.TypeString, Nullable: true, Comment: "平台类型,服务器/边缘设备"},
		{Name: "device_model", Type: field.TypeString, Nullable: true, Comment: "设备型号"},
		{Name: "is_group_type", Type: field.TypeUint, Nullable: true, Comment: "是否是多合一算法组类型算法, 否/是 0/1", Default: 0},
		{Name: "prefix", Type: field.TypeString, Nullable: true, Comment: "算法包服务启动api前缀 ip:port"},
	}
	// AlgorithmTable holds the schema information for the "algorithm" table.
	AlgorithmTable = &schema.Table{
		Name:       "algorithm",
		Columns:    AlgorithmColumns,
		PrimaryKey: []*schema.Column{AlgorithmColumns[0]},
	}
	// AlgorithmAlarmTypeColumns holds the columns for the "algorithm_alarm_type" table.
	AlgorithmAlarmTypeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "type_name", Type: field.TypeString, Comment: "告警类型", Default: ""},
	}
	// AlgorithmAlarmTypeTable holds the schema information for the "algorithm_alarm_type" table.
	AlgorithmAlarmTypeTable = &schema.Table{
		Name:       "algorithm_alarm_type",
		Columns:    AlgorithmAlarmTypeColumns,
		PrimaryKey: []*schema.Column{AlgorithmAlarmTypeColumns[0]},
	}
	// AreaColumns holds the columns for the "area" table.
	AreaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "level", Type: field.TypeUint64, Comment: "层级"},
		{Name: "pid", Type: field.TypeInt64, Comment: "父id"},
	}
	// AreaTable holds the schema information for the "area" table.
	AreaTable = &schema.Table{
		Name:       "area",
		Columns:    AreaColumns,
		PrimaryKey: []*schema.Column{AreaColumns[0]},
	}
	// CameraColumns holds the columns for the "camera" table.
	CameraColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "access_org_list", Type: field.TypeString, Nullable: true, Comment: "授权的组织 id 列表，#分隔"},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "position", Type: field.TypeString, Comment: "点位"},
		{Name: "region", Type: field.TypeString, Nullable: true, Comment: "区域,存id"},
		{Name: "region_str", Type: field.TypeString, Nullable: true, Comment: "区域,存字符串"},
		{Name: "longitude", Type: field.TypeFloat64, Comment: "经度"},
		{Name: "latitude", Type: field.TypeFloat64, Comment: "纬度"},
		{Name: "custom_number", Type: field.TypeInt, Comment: "自定义编号"},
		{Name: "channel_id", Type: field.TypeString, Comment: "通道id"},
		{Name: "serial_number", Type: field.TypeString, Comment: "设备序列号"},
		{Name: "pole_number", Type: field.TypeString, Comment: "杆号"},
		{Name: "device_description", Type: field.TypeString, Comment: "设备描述"},
		{Name: "scene", Type: field.TypeString, Comment: "适用场景"},
		{Name: "place", Type: field.TypeString, Comment: "所属场所", Default: ""},
		{Name: "status", Type: field.TypeEnum, Comment: "状态", Enums: []string{"online", "offline"}},
		{Name: "sp_type", Type: field.TypeEnum, Comment: "流媒体协议类型", Enums: []string{"rtsp", "rtmp", "onvif", "offline-video", "gb28181"}},
		{Name: "sp_source", Type: field.TypeString, Size: 2000, Comment: "流媒体协议地址"},
		{Name: "sp_codec_name", Type: field.TypeString, Comment: "流媒体协议编码名称"},
		{Name: "sp_width", Type: field.TypeInt32, Comment: "流媒体协议宽度"},
		{Name: "sp_height", Type: field.TypeInt32, Comment: "流媒体协议高度"},
		{Name: "trans_type", Type: field.TypeString, Comment: "国标传输协议 UDP/TCP", Default: "TCP"},
		{Name: "device_ip", Type: field.TypeString, Comment: "IP地址", Default: "0.0.0.0"},
		{Name: "device_port", Type: field.TypeInt32, Comment: "端口号", Default: 5060},
		{Name: "gb_id", Type: field.TypeString, Comment: "国标ID", Default: "34020000000000000000"},
		{Name: "sip_user", Type: field.TypeString, Comment: "国标信令SIP认证用户名", Default: ""},
		{Name: "sip_password", Type: field.TypeString, Comment: "国标信令SIP认证密码", Default: ""},
		{Name: "gb_channel_id", Type: field.TypeString, Comment: "国标通道编码", Default: ""},
		{Name: "up_gb_channel_id", Type: field.TypeString, Comment: "向上级联自定义国标通道编码", Default: ""},
		{Name: "gb_device_type", Type: field.TypeString, Comment: "国标设备类型", Default: ""},
		{Name: "type", Type: field.TypeEnum, Comment: "多媒体设备类型", Enums: []string{"camera", "audio"}},
	}
	// CameraTable holds the schema information for the "camera" table.
	CameraTable = &schema.Table{
		Name:       "camera",
		Columns:    CameraColumns,
		PrimaryKey: []*schema.Column{CameraColumns[0]},
	}
	// DeviceColumns holds the columns for the "device" table.
	DeviceColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "access_org_list", Type: field.TypeString, Nullable: true, Comment: "授权的组织 id 列表，#分隔"},
		{Name: "name", Type: field.TypeString, Comment: "设备名称"},
		{Name: "display_name", Type: field.TypeString, Comment: "设备展示名称"},
		{Name: "type", Type: field.TypeEnum, Comment: "设备类型", Enums: []string{"box", "node"}},
		{Name: "ext_id", Type: field.TypeString, Unique: true, Comment: "设备id"},
		{Name: "serial_no", Type: field.TypeString, Comment: "序列号"},
		{Name: "state", Type: field.TypeEnum, Comment: "状态", Enums: []string{"online", "offline"}},
		{Name: "mac", Type: field.TypeString, Comment: "MAC地址"},
		{Name: "zone_name", Type: field.TypeString, Comment: "区域名称"},
		{Name: "zone_id", Type: field.TypeString, Comment: "区域ID"},
		{Name: "workspace_id", Type: field.TypeString, Comment: "工作空间ID"},
		{Name: "equip_id", Type: field.TypeString, Comment: "数生使用的设备ID"},
		{Name: "equip_password", Type: field.TypeString, Comment: "数生使用的设备密码"},
		{Name: "device_info", Type: field.TypeString, Comment: "设备信息"},
		{Name: "model", Type: field.TypeString, Nullable: true, Comment: "设备型号"},
		{Name: "auth_deadline", Type: field.TypeInt64, Nullable: true, Comment: "纳管授权时间"},
		{Name: "activated_at", Type: field.TypeTime, Comment: "纳管激活时间", SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// DeviceTable holds the schema information for the "device" table.
	DeviceTable = &schema.Table{
		Name:       "device",
		Columns:    DeviceColumns,
		PrimaryKey: []*schema.Column{DeviceColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "device_mac",
				Unique:  false,
				Columns: []*schema.Column{DeviceColumns[12]},
			},
		},
	}
	// DeviceAlgoColumns holds the columns for the "device_algo" table.
	DeviceAlgoColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "device_id", Type: field.TypeUint64, Comment: "设备id"},
		{Name: "algo_group_id", Type: field.TypeUint, Nullable: true, Comment: "算法组ID"},
		{Name: "algo_group_name", Type: field.TypeString, Nullable: true, Comment: "算法组name(如十二合一算法)，前端显示用"},
		{Name: "algo_group_version", Type: field.TypeString, Nullable: true, Comment: "算法组版本号，用于算法组整体更新场景"},
		{Name: "name", Type: field.TypeString, Comment: "算法名称"},
		{Name: "version", Type: field.TypeString, Comment: "算法版本"},
		{Name: "install_time", Type: field.TypeTime, Comment: "安装时间", SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// DeviceAlgoTable holds the schema information for the "device_algo" table.
	DeviceAlgoTable = &schema.Table{
		Name:       "device_algo",
		Columns:    DeviceAlgoColumns,
		PrimaryKey: []*schema.Column{DeviceAlgoColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "devicealgo_device_id_algo_group_id_name",
				Unique:  true,
				Columns: []*schema.Column{DeviceAlgoColumns[1], DeviceAlgoColumns[2], DeviceAlgoColumns[5]},
			},
		},
	}
	// DeviceCameraColumns holds the columns for the "device_camera" table.
	DeviceCameraColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "camera_id", Type: field.TypeUint64, Comment: "摄像头id"},
		{Name: "device_id", Type: field.TypeUint64, Comment: "任务id"},
	}
	// DeviceCameraTable holds the schema information for the "device_camera" table.
	DeviceCameraTable = &schema.Table{
		Name:       "device_camera",
		Columns:    DeviceCameraColumns,
		PrimaryKey: []*schema.Column{DeviceCameraColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "device_camera_camera_camera",
				Columns:    []*schema.Column{DeviceCameraColumns[3]},
				RefColumns: []*schema.Column{CameraColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "device_camera_task_device",
				Columns:    []*schema.Column{DeviceCameraColumns[4]},
				RefColumns: []*schema.Column{TaskColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "devicecamera_device_id_camera_id",
				Unique:  true,
				Columns: []*schema.Column{DeviceCameraColumns[4], DeviceCameraColumns[3]},
			},
		},
	}
	// DeviceTokenColumns holds the columns for the "device_token" table.
	DeviceTokenColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "token", Type: field.TypeString, Unique: true, Comment: "设备接入码/激活码"},
		{Name: "device_ext_id", Type: field.TypeString, Comment: "设备ext id"},
	}
	// DeviceTokenTable holds the schema information for the "device_token" table.
	DeviceTokenTable = &schema.Table{
		Name:       "device_token",
		Columns:    DeviceTokenColumns,
		PrimaryKey: []*schema.Column{DeviceTokenColumns[0]},
	}
	// EquipAttrColumns holds the columns for the "equip_attr" table.
	EquipAttrColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "attr_key", Type: field.TypeString, Comment: "属性key"},
		{Name: "attr_value", Type: field.TypeString, Comment: "属性值"},
		{Name: "extend", Type: field.TypeString, Comment: "扩展字段"},
	}
	// EquipAttrTable holds the schema information for the "equip_attr" table.
	EquipAttrTable = &schema.Table{
		Name:       "equip_attr",
		Columns:    EquipAttrColumns,
		PrimaryKey: []*schema.Column{EquipAttrColumns[0]},
	}
	// EventSubsColumns holds the columns for the "event_subs" table.
	EventSubsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "box_id", Type: field.TypeString, Comment: "盒子id"},
		{Name: "channel_id", Type: field.TypeString, Comment: "通道id"},
		{Name: "callback", Type: field.TypeString, Comment: "回调地址"},
		{Name: "template_id", Type: field.TypeString, Comment: "模版id"},
		{Name: "status", Type: field.TypeEnum, Comment: "订阅状态", Enums: []string{"unknown", "enable", "disable"}},
	}
	// EventSubsTable holds the schema information for the "event_subs" table.
	EventSubsTable = &schema.Table{
		Name:       "event_subs",
		Columns:    EventSubsColumns,
		PrimaryKey: []*schema.Column{EventSubsColumns[0]},
	}
	// FileUploadColumns holds the columns for the "file_upload" table.
	FileUploadColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "provider", Type: field.TypeString, Comment: "文件提供者，比如算法文件来自 ctyun_ias/sophgo_park/sophgo_city"},
		{Name: "file_name", Type: field.TypeString, Comment: "文件名"},
		{Name: "md5", Type: field.TypeString, Comment: "文件 md5"},
		{Name: "total_bytes", Type: field.TypeUint64, Comment: "文件大小字节数，前端显示用"},
		{Name: "etag", Type: field.TypeString, Nullable: true, Comment: "文件 etag,不一定等于 md5"},
		{Name: "key", Type: field.TypeString, Comment: "oss 存储的 key"},
		{Name: "upload_id", Type: field.TypeString, Nullable: true, Comment: "oss 上传的标识，用于断点续传"},
		{Name: "status", Type: field.TypeString, Comment: "上传状态"},
		{Name: "type", Type: field.TypeString, Comment: "类型,docker image或者文件"},
		{Name: "algo_group_id", Type: field.TypeUint64, Comment: "算法组id"},
		{Name: "meta", Type: field.TypeString, Size: 2147483647, Comment: "安装meta信息"},
	}
	// FileUploadTable holds the schema information for the "file_upload" table.
	FileUploadTable = &schema.Table{
		Name:       "file_upload",
		Columns:    FileUploadColumns,
		PrimaryKey: []*schema.Column{FileUploadColumns[0]},
	}
	// InformColumns holds the columns for the "inform" table.
	InformColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "access_org_list", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "alarm_name", Type: field.TypeString},
		{Name: "alarm_type", Type: field.TypeString},
		{Name: "sign_name", Type: field.TypeString},
		{Name: "notify_template", Type: field.TypeString},
		{Name: "template_code", Type: field.TypeString},
		{Name: "phone_numbers", Type: field.TypeString},
		{Name: "notify_switch", Type: field.TypeString},
		{Name: "task_name", Type: field.TypeString},
		{Name: "task_id", Type: field.TypeUint64},
	}
	// InformTable holds the schema information for the "inform" table.
	InformTable = &schema.Table{
		Name:       "inform",
		Columns:    InformColumns,
		PrimaryKey: []*schema.Column{InformColumns[0]},
	}
	// OrganizationColumns holds the columns for the "organization" table.
	OrganizationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint32, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "parent_id", Type: field.TypeUint32, Comment: "父级id"},
		{Name: "iam_role_id", Type: field.TypeString, Comment: " IAM 开放接口，保存 iam 对应角色 id", Default: ""},
	}
	// OrganizationTable holds the schema information for the "organization" table.
	OrganizationTable = &schema.Table{
		Name:       "organization",
		Columns:    OrganizationColumns,
		PrimaryKey: []*schema.Column{OrganizationColumns[0]},
	}
	// SettingColumns holds the columns for the "setting" table.
	SettingColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "name", Type: field.TypeString, Comment: "设备名称"},
		{Name: "serial_number", Type: field.TypeString, Comment: "设备序列号"},
		{Name: "version", Type: field.TypeString, Comment: "系统版本号"},
		{Name: "model", Type: field.TypeString, Comment: "设备型号"},
		{Name: "workspace_id", Type: field.TypeString, Comment: "纳管的工作区id", Default: ""},
	}
	// SettingTable holds the schema information for the "setting" table.
	SettingTable = &schema.Table{
		Name:       "setting",
		Columns:    SettingColumns,
		PrimaryKey: []*schema.Column{SettingColumns[0]},
	}
	// SignatureColumns holds the columns for the "signature" table.
	SignatureColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "box_id", Type: field.TypeString, Comment: "对应device表ext_id"},
		{Name: "app_id", Type: field.TypeString, Comment: "app_id"},
		{Name: "app_secret", Type: field.TypeString, Comment: "app秘钥"},
	}
	// SignatureTable holds the schema information for the "signature" table.
	SignatureTable = &schema.Table{
		Name:       "signature",
		Columns:    SignatureColumns,
		PrimaryKey: []*schema.Column{SignatureColumns[0]},
	}
	// TaskColumns holds the columns for the "task" table.
	TaskColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "access_org_list", Type: field.TypeString, Nullable: true, Comment: "授权的组织 id 列表，#分隔"},
		{Name: "name", Type: field.TypeString, Comment: "名称"},
		{Name: "type", Type: field.TypeEnum, Comment: "任务类型", Enums: []string{"unknown", "frame", "stream", "audio"}},
		{Name: "algo_interval", Type: field.TypeFloat64, Comment: "算法执行间隔"},
		{Name: "algo_extra", Type: field.TypeString, Size: 2147483647, Comment: "算法扩展数据"},
		{Name: "extend", Type: field.TypeString, Size: 2147483647, Comment: "扩展字段"},
		{Name: "last_start_time", Type: field.TypeTime, Nullable: true, Comment: "最后启动时间"},
		{Name: "status", Type: field.TypeEnum, Comment: "任务状态", Enums: []string{"unknown", "running", "starting", "initializing", "failed", "stopping", "stopped"}},
		{Name: "algo_group_id", Type: field.TypeUint, Comment: "算法组ID"},
		{Name: "parent_id", Type: field.TypeString, Comment: "父ID, 作为任务下发的ID"},
		{Name: "is_warn", Type: field.TypeUint32, Comment: "首页是否告警"},
		{Name: "period", Type: field.TypeUint32, Comment: "告警周期"},
		{Name: "algo_config", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "算法特有配置"},
		{Name: "reason", Type: field.TypeString, Comment: "任务状态变更原因", Default: ""},
		{Name: "allow_time_type", Type: field.TypeString, Nullable: true, Comment: "运行时段类型"},
		{Name: "algo_id", Type: field.TypeUint64, Comment: "算法id"},
		{Name: "device_id", Type: field.TypeUint64, Comment: "任务执行的设备id"},
	}
	// TaskTable holds the schema information for the "task" table.
	TaskTable = &schema.Table{
		Name:       "task",
		Columns:    TaskColumns,
		PrimaryKey: []*schema.Column{TaskColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_algorithm_tasks",
				Columns:    []*schema.Column{TaskColumns[20]},
				RefColumns: []*schema.Column{AlgorithmColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "task_device_task_device",
				Columns:    []*schema.Column{TaskColumns[21]},
				RefColumns: []*schema.Column{DeviceColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TaskCameraColumns holds the columns for the "task_camera" table.
	TaskCameraColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "access_org_list", Type: field.TypeString, Nullable: true, Comment: "授权的组织 id 列表，#分隔"},
		{Name: "multi_img_box", Type: field.TypeString, Size: 2147483647, Comment: "划线区域"},
		{Name: "camera_id", Type: field.TypeUint64, Comment: "摄像头id"},
		{Name: "task_id", Type: field.TypeUint64, Comment: "任务id"},
	}
	// TaskCameraTable holds the schema information for the "task_camera" table.
	TaskCameraTable = &schema.Table{
		Name:       "task_camera",
		Columns:    TaskCameraColumns,
		PrimaryKey: []*schema.Column{TaskCameraColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_camera_camera_camera",
				Columns:    []*schema.Column{TaskCameraColumns[6]},
				RefColumns: []*schema.Column{CameraColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "task_camera_task_task",
				Columns:    []*schema.Column{TaskCameraColumns[7]},
				RefColumns: []*schema.Column{TaskColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "taskcamera_task_id_camera_id",
				Unique:  true,
				Columns: []*schema.Column{TaskCameraColumns[7], TaskCameraColumns[6]},
			},
		},
	}
	// TaskLimitsColumns holds the columns for the "task_limits" table.
	TaskLimitsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "model", Type: field.TypeString, Nullable: true, Comment: "设备型号"},
		{Name: "max_camera_num", Type: field.TypeUint64, Comment: "最大摄像头数"},
		{Name: "algo_num", Type: field.TypeUint64, Comment: "算法数"},
		{Name: "max_sub_task_num", Type: field.TypeUint64, Comment: "最大子任务路数"},
	}
	// TaskLimitsTable holds the schema information for the "task_limits" table.
	TaskLimitsTable = &schema.Table{
		Name:       "task_limits",
		Columns:    TaskLimitsColumns,
		PrimaryKey: []*schema.Column{TaskLimitsColumns[0]},
	}
	// UpPlatformsColumns holds the columns for the "up_platforms" table.
	UpPlatformsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "access_org_list", Type: field.TypeString, Nullable: true},
		{Name: "sip_id", Type: field.TypeString},
		{Name: "sip_domain", Type: field.TypeString},
		{Name: "sip_ip", Type: field.TypeString},
		{Name: "sip_port", Type: field.TypeInt32},
		{Name: "sip_user", Type: field.TypeString},
		{Name: "sip_password", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "heartbeat_interval", Type: field.TypeInt32},
		{Name: "register_interval", Type: field.TypeInt32},
		{Name: "trans_type", Type: field.TypeString},
		{Name: "gb_id", Type: field.TypeString},
		{Name: "cascadestatus", Type: field.TypeString},
		{Name: "registration_status", Type: field.TypeString},
	}
	// UpPlatformsTable holds the schema information for the "up_platforms" table.
	UpPlatformsTable = &schema.Table{
		Name:       "up_platforms",
		Columns:    UpPlatformsColumns,
		PrimaryKey: []*schema.Column{UpPlatformsColumns[0]},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "name", Type: field.TypeString, Comment: "用户名"},
		{Name: "password", Type: field.TypeString, Comment: "密码"},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
	}
	// WarnPushColumns holds the columns for the "warn_push" table.
	WarnPushColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "access_org_list", Type: field.TypeString, Nullable: true, Comment: "授权的组织 id 列表，#分隔"},
		{Name: "name", Type: field.TypeString, Comment: "推送名称"},
		{Name: "type", Type: field.TypeEnum, Comment: "推送方式", Enums: []string{"webhook"}},
		{Name: "url", Type: field.TypeString, Comment: "推送地址"},
		{Name: "remark", Type: field.TypeString, Comment: "备注"},
		{Name: "mode", Type: field.TypeEnum, Comment: "推送模式", Enums: []string{"realtime"}},
		{Name: "status", Type: field.TypeEnum, Comment: "推送状态", Enums: []string{"unknown", "enabled", "disabled"}},
	}
	// WarnPushTable holds the schema information for the "warn_push" table.
	WarnPushTable = &schema.Table{
		Name:       "warn_push",
		Columns:    WarnPushColumns,
		PrimaryKey: []*schema.Column{WarnPushColumns[0]},
	}
	// WarnPushLogColumns holds the columns for the "warn_push_log" table.
	WarnPushLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "access_org_list", Type: field.TypeString, Nullable: true, Comment: "授权的组织 id 列表，#分隔"},
		{Name: "param", Type: field.TypeString, Size: 2147483647, Comment: "推送参数"},
		{Name: "remark", Type: field.TypeString, Comment: "备注"},
		{Name: "status", Type: field.TypeEnum, Comment: "推送状态", Enums: []string{"failed", "success"}},
		{Name: "push_id", Type: field.TypeUint64, Comment: "推送id"},
	}
	// WarnPushLogTable holds the schema information for the "warn_push_log" table.
	WarnPushLogTable = &schema.Table{
		Name:       "warn_push_log",
		Columns:    WarnPushLogColumns,
		PrimaryKey: []*schema.Column{WarnPushLogColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "warn_push_log_warn_push_push",
				Columns:    []*schema.Column{WarnPushLogColumns[9]},
				RefColumns: []*schema.Column{WarnPushColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WarnSmsErrColumns holds the columns for the "warn_sms_err" table.
	WarnSmsErrColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "access_org_list", Type: field.TypeString, Nullable: true},
		{Name: "app_name", Type: field.TypeString},
		{Name: "record_id", Type: field.TypeUint64},
		{Name: "error_msg", Type: field.TypeString},
	}
	// WarnSmsErrTable holds the schema information for the "warn_sms_err" table.
	WarnSmsErrTable = &schema.Table{
		Name:       "warn_sms_err",
		Columns:    WarnSmsErrColumns,
		PrimaryKey: []*schema.Column{WarnSmsErrColumns[0]},
	}
	// WarningTypeColumns holds the columns for the "warning_type" table.
	WarningTypeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true, Comment: "id"},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "alarm_type", Type: field.TypeString, Comment: "告警I级类型"},
		{Name: "alarm_name", Type: field.TypeString, Comment: "告警II级类型"},
	}
	// WarningTypeTable holds the schema information for the "warning_type" table.
	WarningTypeTable = &schema.Table{
		Name:       "warning_type",
		Columns:    WarningTypeColumns,
		PrimaryKey: []*schema.Column{WarningTypeColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "warningtype_alarm_type_alarm_name",
				Unique:  true,
				Columns: []*schema.Column{WarningTypeColumns[4], WarningTypeColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActiveInfoTable,
		AlgorithmTable,
		AlgorithmAlarmTypeTable,
		AreaTable,
		CameraTable,
		DeviceTable,
		DeviceAlgoTable,
		DeviceCameraTable,
		DeviceTokenTable,
		EquipAttrTable,
		EventSubsTable,
		FileUploadTable,
		InformTable,
		OrganizationTable,
		SettingTable,
		SignatureTable,
		TaskTable,
		TaskCameraTable,
		TaskLimitsTable,
		UpPlatformsTable,
		UserTable,
		WarnPushTable,
		WarnPushLogTable,
		WarnSmsErrTable,
		WarningTypeTable,
	}
)

func init() {
	ActiveInfoTable.Annotation = &entsql.Annotation{
		Table: "active_info",
	}
	AlgorithmTable.Annotation = &entsql.Annotation{
		Table: "algorithm",
	}
	AlgorithmAlarmTypeTable.Annotation = &entsql.Annotation{
		Table: "algorithm_alarm_type",
	}
	AreaTable.Annotation = &entsql.Annotation{
		Table: "area",
	}
	CameraTable.Annotation = &entsql.Annotation{
		Table: "camera",
	}
	DeviceTable.Annotation = &entsql.Annotation{
		Table: "device",
	}
	DeviceAlgoTable.Annotation = &entsql.Annotation{
		Table: "device_algo",
	}
	DeviceCameraTable.ForeignKeys[0].RefTable = CameraTable
	DeviceCameraTable.ForeignKeys[1].RefTable = TaskTable
	DeviceCameraTable.Annotation = &entsql.Annotation{
		Table: "device_camera",
	}
	DeviceTokenTable.Annotation = &entsql.Annotation{
		Table: "device_token",
	}
	EquipAttrTable.Annotation = &entsql.Annotation{
		Table: "equip_attr",
	}
	EventSubsTable.Annotation = &entsql.Annotation{
		Table: "event_subs",
	}
	FileUploadTable.Annotation = &entsql.Annotation{
		Table: "file_upload",
	}
	InformTable.Annotation = &entsql.Annotation{
		Table: "inform",
	}
	OrganizationTable.Annotation = &entsql.Annotation{
		Table: "organization",
	}
	SettingTable.Annotation = &entsql.Annotation{
		Table: "setting",
	}
	SignatureTable.Annotation = &entsql.Annotation{
		Table: "signature",
	}
	TaskTable.ForeignKeys[0].RefTable = AlgorithmTable
	TaskTable.ForeignKeys[1].RefTable = DeviceTable
	TaskTable.Annotation = &entsql.Annotation{
		Table: "task",
	}
	TaskCameraTable.ForeignKeys[0].RefTable = CameraTable
	TaskCameraTable.ForeignKeys[1].RefTable = TaskTable
	TaskCameraTable.Annotation = &entsql.Annotation{
		Table: "task_camera",
	}
	TaskLimitsTable.Annotation = &entsql.Annotation{
		Table: "task_limits",
	}
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
	WarnPushTable.Annotation = &entsql.Annotation{
		Table: "warn_push",
	}
	WarnPushLogTable.ForeignKeys[0].RefTable = WarnPushTable
	WarnPushLogTable.Annotation = &entsql.Annotation{
		Table: "warn_push_log",
	}
	WarnSmsErrTable.Annotation = &entsql.Annotation{
		Table: "warn_sms_err",
	}
	WarningTypeTable.Annotation = &entsql.Annotation{
		Table: "warning_type",
	}
}
