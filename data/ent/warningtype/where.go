// Code generated by ent, DO NOT EDIT.

package warningtype

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"gitlab.ctyuncdn.cn/ias/ias-core/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.WarningType {
	return predicate.WarningType(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.WarningType {
	return predicate.WarningType(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.WarningType {
	return predicate.WarningType(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.WarningType {
	return predicate.WarningType(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.WarningType {
	return predicate.WarningType(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.WarningType {
	return predicate.WarningType(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.WarningType {
	return predicate.WarningType(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldDeletedAt, v))
}

// AlarmType applies equality check predicate on the "alarm_type" field. It's identical to AlarmTypeEQ.
func AlarmType(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldAlarmType, v))
}

// AlarmName applies equality check predicate on the "alarm_name" field. It's identical to AlarmNameEQ.
func AlarmName(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldAlarmName, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.WarningType {
	return predicate.WarningType(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.WarningType {
	return predicate.WarningType(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.WarningType {
	return predicate.WarningType(sql.FieldNotNull(FieldDeletedAt))
}

// AlarmTypeEQ applies the EQ predicate on the "alarm_type" field.
func AlarmTypeEQ(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldAlarmType, v))
}

// AlarmTypeNEQ applies the NEQ predicate on the "alarm_type" field.
func AlarmTypeNEQ(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldNEQ(FieldAlarmType, v))
}

// AlarmTypeIn applies the In predicate on the "alarm_type" field.
func AlarmTypeIn(vs ...string) predicate.WarningType {
	return predicate.WarningType(sql.FieldIn(FieldAlarmType, vs...))
}

// AlarmTypeNotIn applies the NotIn predicate on the "alarm_type" field.
func AlarmTypeNotIn(vs ...string) predicate.WarningType {
	return predicate.WarningType(sql.FieldNotIn(FieldAlarmType, vs...))
}

// AlarmTypeGT applies the GT predicate on the "alarm_type" field.
func AlarmTypeGT(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldGT(FieldAlarmType, v))
}

// AlarmTypeGTE applies the GTE predicate on the "alarm_type" field.
func AlarmTypeGTE(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldGTE(FieldAlarmType, v))
}

// AlarmTypeLT applies the LT predicate on the "alarm_type" field.
func AlarmTypeLT(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldLT(FieldAlarmType, v))
}

// AlarmTypeLTE applies the LTE predicate on the "alarm_type" field.
func AlarmTypeLTE(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldLTE(FieldAlarmType, v))
}

// AlarmTypeContains applies the Contains predicate on the "alarm_type" field.
func AlarmTypeContains(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldContains(FieldAlarmType, v))
}

// AlarmTypeHasPrefix applies the HasPrefix predicate on the "alarm_type" field.
func AlarmTypeHasPrefix(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldHasPrefix(FieldAlarmType, v))
}

// AlarmTypeHasSuffix applies the HasSuffix predicate on the "alarm_type" field.
func AlarmTypeHasSuffix(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldHasSuffix(FieldAlarmType, v))
}

// AlarmTypeEqualFold applies the EqualFold predicate on the "alarm_type" field.
func AlarmTypeEqualFold(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldEqualFold(FieldAlarmType, v))
}

// AlarmTypeContainsFold applies the ContainsFold predicate on the "alarm_type" field.
func AlarmTypeContainsFold(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldContainsFold(FieldAlarmType, v))
}

// AlarmNameEQ applies the EQ predicate on the "alarm_name" field.
func AlarmNameEQ(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldEQ(FieldAlarmName, v))
}

// AlarmNameNEQ applies the NEQ predicate on the "alarm_name" field.
func AlarmNameNEQ(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldNEQ(FieldAlarmName, v))
}

// AlarmNameIn applies the In predicate on the "alarm_name" field.
func AlarmNameIn(vs ...string) predicate.WarningType {
	return predicate.WarningType(sql.FieldIn(FieldAlarmName, vs...))
}

// AlarmNameNotIn applies the NotIn predicate on the "alarm_name" field.
func AlarmNameNotIn(vs ...string) predicate.WarningType {
	return predicate.WarningType(sql.FieldNotIn(FieldAlarmName, vs...))
}

// AlarmNameGT applies the GT predicate on the "alarm_name" field.
func AlarmNameGT(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldGT(FieldAlarmName, v))
}

// AlarmNameGTE applies the GTE predicate on the "alarm_name" field.
func AlarmNameGTE(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldGTE(FieldAlarmName, v))
}

// AlarmNameLT applies the LT predicate on the "alarm_name" field.
func AlarmNameLT(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldLT(FieldAlarmName, v))
}

// AlarmNameLTE applies the LTE predicate on the "alarm_name" field.
func AlarmNameLTE(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldLTE(FieldAlarmName, v))
}

// AlarmNameContains applies the Contains predicate on the "alarm_name" field.
func AlarmNameContains(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldContains(FieldAlarmName, v))
}

// AlarmNameHasPrefix applies the HasPrefix predicate on the "alarm_name" field.
func AlarmNameHasPrefix(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldHasPrefix(FieldAlarmName, v))
}

// AlarmNameHasSuffix applies the HasSuffix predicate on the "alarm_name" field.
func AlarmNameHasSuffix(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldHasSuffix(FieldAlarmName, v))
}

// AlarmNameEqualFold applies the EqualFold predicate on the "alarm_name" field.
func AlarmNameEqualFold(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldEqualFold(FieldAlarmName, v))
}

// AlarmNameContainsFold applies the ContainsFold predicate on the "alarm_name" field.
func AlarmNameContainsFold(v string) predicate.WarningType {
	return predicate.WarningType(sql.FieldContainsFold(FieldAlarmName, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.WarningType) predicate.WarningType {
	return predicate.WarningType(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.WarningType) predicate.WarningType {
	return predicate.WarningType(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.WarningType) predicate.WarningType {
	return predicate.WarningType(sql.NotPredicates(p))
}
