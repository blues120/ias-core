// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.9
// source: coreconf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scheduler_Mode int32

const (
	Scheduler_k8s     Scheduler_Mode = 0
	Scheduler_docker  Scheduler_Mode = 1
	Scheduler_ecx     Scheduler_Mode = 2
	Scheduler_ecx_vss Scheduler_Mode = 3
	Scheduler_sophgo  Scheduler_Mode = 4
	Scheduler_mix     Scheduler_Mode = 5
)

// Enum value maps for Scheduler_Mode.
var (
	Scheduler_Mode_name = map[int32]string{
		0: "k8s",
		1: "docker",
		2: "ecx",
		3: "ecx_vss",
		4: "sophgo",
		5: "mix",
	}
	Scheduler_Mode_value = map[string]int32{
		"k8s":     0,
		"docker":  1,
		"ecx":     2,
		"ecx_vss": 3,
		"sophgo":  4,
		"mix":     5,
	}
)

func (x Scheduler_Mode) Enum() *Scheduler_Mode {
	p := new(Scheduler_Mode)
	*p = x
	return p
}

func (x Scheduler_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scheduler_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_coreconf_proto_enumTypes[0].Descriptor()
}

func (Scheduler_Mode) Type() protoreflect.EnumType {
	return &file_coreconf_proto_enumTypes[0]
}

func (x Scheduler_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scheduler_Mode.Descriptor instead.
func (Scheduler_Mode) EnumDescriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{4, 0}
}

type Service_ServiceName int32

const (
	Service_JMV         Service_ServiceName = 0 // 建木
	Service_VSS_SERVICE Service_ServiceName = 1 // 数生
)

// Enum value maps for Service_ServiceName.
var (
	Service_ServiceName_name = map[int32]string{
		0: "JMV",
		1: "VSS_SERVICE",
	}
	Service_ServiceName_value = map[string]int32{
		"JMV":         0,
		"VSS_SERVICE": 1,
	}
)

func (x Service_ServiceName) Enum() *Service_ServiceName {
	p := new(Service_ServiceName)
	*p = x
	return p
}

func (x Service_ServiceName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Service_ServiceName) Descriptor() protoreflect.EnumDescriptor {
	return file_coreconf_proto_enumTypes[1].Descriptor()
}

func (Service_ServiceName) Type() protoreflect.EnumType {
	return &file_coreconf_proto_enumTypes[1]
}

func (x Service_ServiceName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Service_ServiceName.Descriptor instead.
func (Service_ServiceName) EnumDescriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{12, 0}
}

type Bootstrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        *Data        `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Auth        *Auth        `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Scheduler   *Scheduler   `protobuf:"bytes,3,opt,name=scheduler,proto3" json:"scheduler,omitempty"`
	OpenApi     *OpenApi     `protobuf:"bytes,4,opt,name=open_api,json=openApi,proto3" json:"open_api,omitempty"`
	YtxClient   *YtxClient   `protobuf:"bytes,5,opt,name=ytx_client,json=ytxClient,proto3" json:"ytx_client,omitempty"`
	WarnAlert   *WarnAlert   `protobuf:"bytes,6,opt,name=warn_alert,json=warnAlert,proto3" json:"warn_alert,omitempty"`
	Callback    *Callback    `protobuf:"bytes,7,opt,name=callback,proto3" json:"callback,omitempty"`
	VssSign     *VssSign     `protobuf:"bytes,8,opt,name=vss_sign,json=vssSign,proto3" json:"vss_sign,omitempty"`
	AgentExtend *AgentExtend `protobuf:"bytes,9,opt,name=agent_extend,json=agentExtend,proto3" json:"agent_extend,omitempty"`
	Log         *Log         `protobuf:"bytes,10,opt,name=log,proto3" json:"log,omitempty"`         // 日志配置
	Sophgo      *Sophgo      `protobuf:"bytes,11,opt,name=sophgo,proto3" json:"sophgo,omitempty"`   // 算能算法服务配置
	Service     *Service     `protobuf:"bytes,12,opt,name=service,proto3" json:"service,omitempty"` //判断是否是数生服务
	Iam         *IAM         `protobuf:"bytes,13,opt,name=iam,proto3" json:"iam,omitempty"`         // IAM 配置
	Scene       string       `protobuf:"bytes,14,opt,name=scene,proto3" json:"scene,omitempty"`     // 区分场景：jmv/jme
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Bootstrap) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Bootstrap) GetScheduler() *Scheduler {
	if x != nil {
		return x.Scheduler
	}
	return nil
}

func (x *Bootstrap) GetOpenApi() *OpenApi {
	if x != nil {
		return x.OpenApi
	}
	return nil
}

func (x *Bootstrap) GetYtxClient() *YtxClient {
	if x != nil {
		return x.YtxClient
	}
	return nil
}

func (x *Bootstrap) GetWarnAlert() *WarnAlert {
	if x != nil {
		return x.WarnAlert
	}
	return nil
}

func (x *Bootstrap) GetCallback() *Callback {
	if x != nil {
		return x.Callback
	}
	return nil
}

func (x *Bootstrap) GetVssSign() *VssSign {
	if x != nil {
		return x.VssSign
	}
	return nil
}

func (x *Bootstrap) GetAgentExtend() *AgentExtend {
	if x != nil {
		return x.AgentExtend
	}
	return nil
}

func (x *Bootstrap) GetLog() *Log {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *Bootstrap) GetSophgo() *Sophgo {
	if x != nil {
		return x.Sophgo
	}
	return nil
}

func (x *Bootstrap) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *Bootstrap) GetIam() *IAM {
	if x != nil {
		return x.Iam
	}
	return nil
}

func (x *Bootstrap) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   *Data_Database   `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Redis      *Data_Redis      `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	Oss        *Data_Oss        `protobuf:"bytes,3,opt,name=oss,proto3" json:"oss,omitempty"`
	Mq         *Data_Mq         `protobuf:"bytes,4,opt,name=mq,proto3" json:"mq,omitempty"`
	Kubernetes *Data_Kubernetes `protobuf:"bytes,5,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
	Mqtt       *Data_Mqtt       `protobuf:"bytes,6,opt,name=mqtt,proto3" json:"mqtt,omitempty"`
	Gb28181    *Gb28181         `protobuf:"bytes,7,opt,name=gb28181,proto3" json:"gb28181,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{1}
}

func (x *Data) GetDatabase() *Data_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Data) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Data) GetOss() *Data_Oss {
	if x != nil {
		return x.Oss
	}
	return nil
}

func (x *Data) GetMq() *Data_Mq {
	if x != nil {
		return x.Mq
	}
	return nil
}

func (x *Data) GetKubernetes() *Data_Kubernetes {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

func (x *Data) GetMqtt() *Data_Mqtt {
	if x != nil {
		return x.Mqtt
	}
	return nil
}

func (x *Data) GetGb28181() *Gb28181 {
	if x != nil {
		return x.Gb28181
	}
	return nil
}

type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessExpiration  *durationpb.Duration `protobuf:"bytes,1,opt,name=access_expiration,json=accessExpiration,proto3" json:"access_expiration,omitempty"`
	RefreshExpiration *durationpb.Duration `protobuf:"bytes,2,opt,name=refresh_expiration,json=refreshExpiration,proto3" json:"refresh_expiration,omitempty"`
	JwtKey            string               `protobuf:"bytes,3,opt,name=jwt_key,json=jwtKey,proto3" json:"jwt_key,omitempty"`
	CaptchaExpire     *durationpb.Duration `protobuf:"bytes,4,opt,name=captcha_expire,json=captchaExpire,proto3" json:"captcha_expire,omitempty"`
	Disable           bool                 `protobuf:"varint,5,opt,name=disable,proto3" json:"disable,omitempty"`
	SignMethod        string               `protobuf:"bytes,6,opt,name=sign_method,json=signMethod,proto3" json:"sign_method,omitempty"`
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{2}
}

func (x *Auth) GetAccessExpiration() *durationpb.Duration {
	if x != nil {
		return x.AccessExpiration
	}
	return nil
}

func (x *Auth) GetRefreshExpiration() *durationpb.Duration {
	if x != nil {
		return x.RefreshExpiration
	}
	return nil
}

func (x *Auth) GetJwtKey() string {
	if x != nil {
		return x.JwtKey
	}
	return ""
}

func (x *Auth) GetCaptchaExpire() *durationpb.Duration {
	if x != nil {
		return x.CaptchaExpire
	}
	return nil
}

func (x *Auth) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *Auth) GetSignMethod() string {
	if x != nil {
		return x.SignMethod
	}
	return ""
}

type IAM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable          bool        `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"` // 是否启用 IAM 认证
	Redis           *Data_Redis `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	IamHost         string      `protobuf:"bytes,3,opt,name=iam_host,json=iamHost,proto3" json:"iam_host,omitempty"`
	AppId           string      `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppSecret       string      `protobuf:"bytes,5,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
	Ac              string      `protobuf:"bytes,6,opt,name=ac,proto3" json:"ac,omitempty"`
	PrivilegeAction string      `protobuf:"bytes,7,opt,name=privilege_action,json=privilegeAction,proto3" json:"privilege_action,omitempty"`
}

func (x *IAM) Reset() {
	*x = IAM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IAM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IAM) ProtoMessage() {}

func (x *IAM) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IAM.ProtoReflect.Descriptor instead.
func (*IAM) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{3}
}

func (x *IAM) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *IAM) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *IAM) GetIamHost() string {
	if x != nil {
		return x.IamHost
	}
	return ""
}

func (x *IAM) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *IAM) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *IAM) GetAc() string {
	if x != nil {
		return x.Ac
	}
	return ""
}

func (x *IAM) GetPrivilegeAction() string {
	if x != nil {
		return x.PrivilegeAction
	}
	return ""
}

type Scheduler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode Scheduler_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=ias_core.conf.Scheduler_Mode" json:"mode,omitempty"`
}

func (x *Scheduler) Reset() {
	*x = Scheduler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scheduler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scheduler) ProtoMessage() {}

func (x *Scheduler) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scheduler.ProtoReflect.Descriptor instead.
func (*Scheduler) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{4}
}

func (x *Scheduler) GetMode() Scheduler_Mode {
	if x != nil {
		return x.Mode
	}
	return Scheduler_k8s
}

type OpenApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host        string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	AppId       string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppSecret   string `protobuf:"bytes,3,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
	Ac          string `protobuf:"bytes,4,opt,name=ac,proto3" json:"ac,omitempty"`
	WanUrl      string `protobuf:"bytes,5,opt,name=wan_url,json=wanUrl,proto3" json:"wan_url,omitempty"`
	WorkspaceId string `protobuf:"bytes,6,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *OpenApi) Reset() {
	*x = OpenApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenApi) ProtoMessage() {}

func (x *OpenApi) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenApi.ProtoReflect.Descriptor instead.
func (*OpenApi) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{5}
}

func (x *OpenApi) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *OpenApi) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *OpenApi) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *OpenApi) GetAc() string {
	if x != nil {
		return x.Ac
	}
	return ""
}

func (x *OpenApi) GetWanUrl() string {
	if x != nil {
		return x.WanUrl
	}
	return ""
}

func (x *OpenApi) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type YtxClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Ak  string `protobuf:"bytes,1,opt,name=ak,proto3" json:"ak,omitempty"`
	Sk  string `protobuf:"bytes,2,opt,name=sk,proto3" json:"sk,omitempty"`
}

func (x *YtxClient) Reset() {
	*x = YtxClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YtxClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YtxClient) ProtoMessage() {}

func (x *YtxClient) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YtxClient.ProtoReflect.Descriptor instead.
func (*YtxClient) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{6}
}

func (x *YtxClient) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *YtxClient) GetAk() string {
	if x != nil {
		return x.Ak
	}
	return ""
}

func (x *YtxClient) GetSk() string {
	if x != nil {
		return x.Sk
	}
	return ""
}

type WarnAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"` // redis订阅channel名
}

func (x *WarnAlert) Reset() {
	*x = WarnAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarnAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarnAlert) ProtoMessage() {}

func (x *WarnAlert) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarnAlert.ProtoReflect.Descriptor instead.
func (*WarnAlert) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{7}
}

func (x *WarnAlert) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type Callback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr         string            `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Urls         map[string]string `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MqPublicAddr string            `protobuf:"bytes,3,opt,name=mq_public_addr,json=mqPublicAddr,proto3" json:"mq_public_addr,omitempty"`
	AuthEnable   bool              `protobuf:"varint,4,opt,name=auth_enable,json=authEnable,proto3" json:"auth_enable,omitempty"`
}

func (x *Callback) Reset() {
	*x = Callback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Callback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Callback) ProtoMessage() {}

func (x *Callback) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Callback.ProtoReflect.Descriptor instead.
func (*Callback) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{8}
}

func (x *Callback) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Callback) GetUrls() map[string]string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *Callback) GetMqPublicAddr() string {
	if x != nil {
		return x.MqPublicAddr
	}
	return ""
}

func (x *Callback) GetAuthEnable() bool {
	if x != nil {
		return x.AuthEnable
	}
	return false
}

type VssSign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessSecret string `protobuf:"bytes,2,opt,name=access_secret,json=accessSecret,proto3" json:"access_secret,omitempty"`
	AccessKey    string `protobuf:"bytes,3,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	Version      string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Host         string `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *VssSign) Reset() {
	*x = VssSign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VssSign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VssSign) ProtoMessage() {}

func (x *VssSign) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VssSign.ProtoReflect.Descriptor instead.
func (*VssSign) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{9}
}

func (x *VssSign) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VssSign) GetAccessSecret() string {
	if x != nil {
		return x.AccessSecret
	}
	return ""
}

func (x *VssSign) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *VssSign) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VssSign) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type AgentExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileTimeOut string `protobuf:"bytes,1,opt,name=file_time_out,json=fileTimeOut,proto3" json:"file_time_out,omitempty"`
}

func (x *AgentExtend) Reset() {
	*x = AgentExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentExtend) ProtoMessage() {}

func (x *AgentExtend) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentExtend.ProtoReflect.Descriptor instead.
func (*AgentExtend) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{10}
}

func (x *AgentExtend) GetFileTimeOut() string {
	if x != nil {
		return x.FileTimeOut
	}
	return ""
}

type Sophgo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"` // ip:port 算能算法服务地址
}

func (x *Sophgo) Reset() {
	*x = Sophgo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sophgo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sophgo) ProtoMessage() {}

func (x *Sophgo) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sophgo.ProtoReflect.Descriptor instead.
func (*Sophgo) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{11}
}

func (x *Sophgo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name Service_ServiceName `protobuf:"varint,1,opt,name=name,proto3,enum=ias_core.conf.Service_ServiceName" json:"name,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{12}
}

func (x *Service) GetName() Service_ServiceName {
	if x != nil {
		return x.Name
	}
	return Service_JMV
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode             string        `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Level            string        `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	SeparateErrorLog bool          `protobuf:"varint,3,opt,name=separate_error_log,json=separateErrorLog,proto3" json:"separate_error_log,omitempty"`
	Rotation         *Log_Rotation `protobuf:"bytes,4,opt,name=rotation,proto3" json:"rotation,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{13}
}

func (x *Log) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Log) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Log) GetSeparateErrorLog() bool {
	if x != nil {
		return x.SeparateErrorLog
	}
	return false
}

func (x *Log) GetRotation() *Log_Rotation {
	if x != nil {
		return x.Rotation
	}
	return nil
}

type Gb28181 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SipAddr   string `protobuf:"bytes,1,opt,name=sip_addr,json=sipAddr,proto3" json:"sip_addr,omitempty"`
	LocalGbid string `protobuf:"bytes,2,opt,name=local_gbid,json=localGbid,proto3" json:"local_gbid,omitempty"`
}

func (x *Gb28181) Reset() {
	*x = Gb28181{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gb28181) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gb28181) ProtoMessage() {}

func (x *Gb28181) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gb28181.ProtoReflect.Descriptor instead.
func (*Gb28181) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{14}
}

func (x *Gb28181) GetSipAddr() string {
	if x != nil {
		return x.SipAddr
	}
	return ""
}

func (x *Gb28181) GetLocalGbid() string {
	if x != nil {
		return x.LocalGbid
	}
	return ""
}

type Data_Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver          string               `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Source          string               `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	MaxIdleConns    int32                `protobuf:"varint,3,opt,name=max_idle_conns,json=maxIdleConns,proto3" json:"max_idle_conns,omitempty"`
	MaxOpenConns    int32                `protobuf:"varint,4,opt,name=max_open_conns,json=maxOpenConns,proto3" json:"max_open_conns,omitempty"`
	ConnMaxLifetime *durationpb.Duration `protobuf:"bytes,5,opt,name=conn_max_lifetime,json=connMaxLifetime,proto3" json:"conn_max_lifetime,omitempty"`
	AutoMigration   bool                 `protobuf:"varint,7,opt,name=auto_migration,json=autoMigration,proto3" json:"auto_migration,omitempty"`
}

func (x *Data_Database) Reset() {
	*x = Data_Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Database) ProtoMessage() {}

func (x *Data_Database) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Database.ProtoReflect.Descriptor instead.
func (*Data_Database) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Data_Database) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Data_Database) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Data_Database) GetMaxIdleConns() int32 {
	if x != nil {
		return x.MaxIdleConns
	}
	return 0
}

func (x *Data_Database) GetMaxOpenConns() int32 {
	if x != nil {
		return x.MaxOpenConns
	}
	return 0
}

func (x *Data_Database) GetConnMaxLifetime() *durationpb.Duration {
	if x != nil {
		return x.ConnMaxLifetime
	}
	return nil
}

func (x *Data_Database) GetAutoMigration() bool {
	if x != nil {
		return x.AutoMigration
	}
	return false
}

type Data_Redis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr         string               `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Password     string               `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Db           int32                `protobuf:"varint,3,opt,name=db,proto3" json:"db,omitempty"`
	ReadTimeout  *durationpb.Duration `protobuf:"bytes,4,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	WriteTimeout *durationpb.Duration `protobuf:"bytes,5,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Data_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Data_Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Data_Redis) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *Data_Redis) GetWriteTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

type Data_Oss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Oss:
	//
	//	*Data_Oss_Local_
	//	*Data_Oss_AwsS3_
	Oss isData_Oss_Oss `protobuf_oneof:"oss"`
}

func (x *Data_Oss) Reset() {
	*x = Data_Oss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Oss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Oss) ProtoMessage() {}

func (x *Data_Oss) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Oss.ProtoReflect.Descriptor instead.
func (*Data_Oss) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{1, 2}
}

func (m *Data_Oss) GetOss() isData_Oss_Oss {
	if m != nil {
		return m.Oss
	}
	return nil
}

func (x *Data_Oss) GetLocal() *Data_Oss_Local {
	if x, ok := x.GetOss().(*Data_Oss_Local_); ok {
		return x.Local
	}
	return nil
}

func (x *Data_Oss) GetAwsS3() *Data_Oss_AwsS3 {
	if x, ok := x.GetOss().(*Data_Oss_AwsS3_); ok {
		return x.AwsS3
	}
	return nil
}

type isData_Oss_Oss interface {
	isData_Oss_Oss()
}

type Data_Oss_Local_ struct {
	Local *Data_Oss_Local `protobuf:"bytes,1,opt,name=local,proto3,oneof"`
}

type Data_Oss_AwsS3_ struct {
	AwsS3 *Data_Oss_AwsS3 `protobuf:"bytes,2,opt,name=aws_s3,json=awsS3,proto3,oneof"`
}

func (*Data_Oss_Local_) isData_Oss_Oss() {}

func (*Data_Oss_AwsS3_) isData_Oss_Oss() {}

type Data_Mq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url          string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	QueueName    string `protobuf:"bytes,2,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	RoutingKey   string `protobuf:"bytes,3,opt,name=routing_key,json=routingKey,proto3" json:"routing_key,omitempty"`
	ExchangeName string `protobuf:"bytes,4,opt,name=exchange_name,json=exchangeName,proto3" json:"exchange_name,omitempty"`
	ExchangeType string `protobuf:"bytes,5,opt,name=exchange_type,json=exchangeType,proto3" json:"exchange_type,omitempty"`
}

func (x *Data_Mq) Reset() {
	*x = Data_Mq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Mq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Mq) ProtoMessage() {}

func (x *Data_Mq) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Mq.ProtoReflect.Descriptor instead.
func (*Data_Mq) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{1, 3}
}

func (x *Data_Mq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Data_Mq) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *Data_Mq) GetRoutingKey() string {
	if x != nil {
		return x.RoutingKey
	}
	return ""
}

func (x *Data_Mq) GetExchangeName() string {
	if x != nil {
		return x.ExchangeName
	}
	return ""
}

func (x *Data_Mq) GetExchangeType() string {
	if x != nil {
		return x.ExchangeType
	}
	return ""
}

type Data_Kubernetes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace         string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	KubeConfig        string            `protobuf:"bytes,2,opt,name=kube_config,json=kubeConfig,proto3" json:"kube_config,omitempty"`
	NodeSelector      string            `protobuf:"bytes,3,opt,name=node_selector,json=nodeSelector,proto3" json:"node_selector,omitempty"`
	FrameTaskBaseDir  string            `protobuf:"bytes,4,opt,name=frame_task_base_dir,json=frameTaskBaseDir,proto3" json:"frame_task_base_dir,omitempty"`
	FrameFfmpegImage  string            `protobuf:"bytes,5,opt,name=frame_ffmpeg_image,json=frameFfmpegImage,proto3" json:"frame_ffmpeg_image,omitempty"`
	FrameSidecarImage string            `protobuf:"bytes,6,opt,name=frame_sidecar_image,json=frameSidecarImage,proto3" json:"frame_sidecar_image,omitempty"`
	GpuResourceKey    string            `protobuf:"bytes,7,opt,name=gpu_resource_key,json=gpuResourceKey,proto3" json:"gpu_resource_key,omitempty"`
	GpuOpenVirtual    bool              `protobuf:"varint,8,opt,name=gpu_open_virtual,json=gpuOpenVirtual,proto3" json:"gpu_open_virtual,omitempty"` // 开启GPU虚拟化，可以多个pod 使用一张GPU卡
	HostAliases       []*Data_HostAlias `protobuf:"bytes,9,rep,name=host_aliases,json=hostAliases,proto3" json:"host_aliases,omitempty"`             //ip和域名映射
	BusyboxImage      string            `protobuf:"bytes,10,opt,name=busybox_image,json=busyboxImage,proto3" json:"busybox_image,omitempty"`
}

func (x *Data_Kubernetes) Reset() {
	*x = Data_Kubernetes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Kubernetes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Kubernetes) ProtoMessage() {}

func (x *Data_Kubernetes) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Kubernetes.ProtoReflect.Descriptor instead.
func (*Data_Kubernetes) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{1, 4}
}

func (x *Data_Kubernetes) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Data_Kubernetes) GetKubeConfig() string {
	if x != nil {
		return x.KubeConfig
	}
	return ""
}

func (x *Data_Kubernetes) GetNodeSelector() string {
	if x != nil {
		return x.NodeSelector
	}
	return ""
}

func (x *Data_Kubernetes) GetFrameTaskBaseDir() string {
	if x != nil {
		return x.FrameTaskBaseDir
	}
	return ""
}

func (x *Data_Kubernetes) GetFrameFfmpegImage() string {
	if x != nil {
		return x.FrameFfmpegImage
	}
	return ""
}

func (x *Data_Kubernetes) GetFrameSidecarImage() string {
	if x != nil {
		return x.FrameSidecarImage
	}
	return ""
}

func (x *Data_Kubernetes) GetGpuResourceKey() string {
	if x != nil {
		return x.GpuResourceKey
	}
	return ""
}

func (x *Data_Kubernetes) GetGpuOpenVirtual() bool {
	if x != nil {
		return x.GpuOpenVirtual
	}
	return false
}

func (x *Data_Kubernetes) GetHostAliases() []*Data_HostAlias {
	if x != nil {
		return x.HostAliases
	}
	return nil
}

func (x *Data_Kubernetes) GetBusyboxImage() string {
	if x != nil {
		return x.BusyboxImage
	}
	return ""
}

type Data_HostAlias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip        string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Hostnames []string `protobuf:"bytes,2,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
}

func (x *Data_HostAlias) Reset() {
	*x = Data_HostAlias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_HostAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_HostAlias) ProtoMessage() {}

func (x *Data_HostAlias) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_HostAlias.ProtoReflect.Descriptor instead.
func (*Data_HostAlias) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{1, 5}
}

func (x *Data_HostAlias) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Data_HostAlias) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

type Data_Mqtt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr     string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"` // mqtt消息服务器地址
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Data_Mqtt) Reset() {
	*x = Data_Mqtt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Mqtt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Mqtt) ProtoMessage() {}

func (x *Data_Mqtt) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Mqtt.ProtoReflect.Descriptor instead.
func (*Data_Mqtt) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{1, 6}
}

func (x *Data_Mqtt) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Mqtt) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Data_Mqtt) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Data_Oss_Local struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorePath string `protobuf:"bytes,1,opt,name=store_path,json=storePath,proto3" json:"store_path,omitempty"`
	Path      string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Data_Oss_Local) Reset() {
	*x = Data_Oss_Local{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Oss_Local) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Oss_Local) ProtoMessage() {}

func (x *Data_Oss_Local) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Oss_Local.ProtoReflect.Descriptor instead.
func (*Data_Oss_Local) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{1, 2, 0}
}

func (x *Data_Oss_Local) GetStorePath() string {
	if x != nil {
		return x.StorePath
	}
	return ""
}

func (x *Data_Oss_Local) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Data_Oss_AwsS3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ak              string `protobuf:"bytes,1,opt,name=ak,proto3" json:"ak,omitempty"`
	Sk              string `protobuf:"bytes,2,opt,name=sk,proto3" json:"sk,omitempty"`
	Bucket          string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Endpoint        string `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Region          string `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	BucketDir       string `protobuf:"bytes,6,opt,name=bucket_dir,json=bucketDir,proto3" json:"bucket_dir,omitempty"`
	FaceDir         string `protobuf:"bytes,7,opt,name=face_dir,json=faceDir,proto3" json:"face_dir,omitempty"`
	EndpointAlias   string `protobuf:"bytes,8,opt,name=endpoint_alias,json=endpointAlias,proto3" json:"endpoint_alias,omitempty"`
	TrainDataBucket string `protobuf:"bytes,9,opt,name=train_data_bucket,json=trainDataBucket,proto3" json:"train_data_bucket,omitempty"`
}

func (x *Data_Oss_AwsS3) Reset() {
	*x = Data_Oss_AwsS3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Oss_AwsS3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Oss_AwsS3) ProtoMessage() {}

func (x *Data_Oss_AwsS3) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Oss_AwsS3.ProtoReflect.Descriptor instead.
func (*Data_Oss_AwsS3) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{1, 2, 1}
}

func (x *Data_Oss_AwsS3) GetAk() string {
	if x != nil {
		return x.Ak
	}
	return ""
}

func (x *Data_Oss_AwsS3) GetSk() string {
	if x != nil {
		return x.Sk
	}
	return ""
}

func (x *Data_Oss_AwsS3) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *Data_Oss_AwsS3) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Data_Oss_AwsS3) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Data_Oss_AwsS3) GetBucketDir() string {
	if x != nil {
		return x.BucketDir
	}
	return ""
}

func (x *Data_Oss_AwsS3) GetFaceDir() string {
	if x != nil {
		return x.FaceDir
	}
	return ""
}

func (x *Data_Oss_AwsS3) GetEndpointAlias() string {
	if x != nil {
		return x.EndpointAlias
	}
	return ""
}

func (x *Data_Oss_AwsS3) GetTrainDataBucket() string {
	if x != nil {
		return x.TrainDataBucket
	}
	return ""
}

type Log_Rotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename   string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	MaxSizeMb  int32  `protobuf:"varint,3,opt,name=max_size_mb,json=maxSizeMb,proto3" json:"max_size_mb,omitempty"`
	MaxBackups int32  `protobuf:"varint,4,opt,name=max_backups,json=maxBackups,proto3" json:"max_backups,omitempty"`
	MaxAge     int32  `protobuf:"varint,5,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	Compress   bool   `protobuf:"varint,6,opt,name=compress,proto3" json:"compress,omitempty"`
}

func (x *Log_Rotation) Reset() {
	*x = Log_Rotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coreconf_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log_Rotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log_Rotation) ProtoMessage() {}

func (x *Log_Rotation) ProtoReflect() protoreflect.Message {
	mi := &file_coreconf_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log_Rotation.ProtoReflect.Descriptor instead.
func (*Log_Rotation) Descriptor() ([]byte, []int) {
	return file_coreconf_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Log_Rotation) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Log_Rotation) GetMaxSizeMb() int32 {
	if x != nil {
		return x.MaxSizeMb
	}
	return 0
}

func (x *Log_Rotation) GetMaxBackups() int32 {
	if x != nil {
		return x.MaxBackups
	}
	return 0
}

func (x *Log_Rotation) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *Log_Rotation) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

var File_coreconf_proto protoreflect.FileDescriptor

var file_coreconf_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa4, 0x05, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x27, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x61,
	0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x36, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x52, 0x09, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x61, 0x70, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x61, 0x73, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70,
	0x69, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x12, 0x37, 0x0a, 0x0a, 0x79, 0x74,
	0x78, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x59,
	0x74, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x79, 0x74, 0x78, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x57, 0x61, 0x72, 0x6e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x09, 0x77, 0x61, 0x72, 0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x33, 0x0a, 0x08,
	0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x12, 0x31, 0x0a, 0x08, 0x76, 0x73, 0x73, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x56, 0x73, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x07, 0x76, 0x73, 0x73,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x61, 0x73,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x6f, 0x70,
	0x68, 0x67, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x61, 0x73, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x6f, 0x70, 0x68, 0x67, 0x6f,
	0x52, 0x06, 0x73, 0x6f, 0x70, 0x68, 0x67, 0x6f, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x61, 0x73, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x69, 0x61,
	0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x49, 0x41, 0x4d, 0x52, 0x03, 0x69, 0x61, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x22, 0xd3, 0x0f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x38, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x72, 0x65, 0x64,
	0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65,
	0x64, 0x69, 0x73, 0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x12, 0x29, 0x0a, 0x03, 0x6f, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x73, 0x73,
	0x52, 0x03, 0x6f, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x02, 0x6d, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x71, 0x52, 0x02, 0x6d, 0x71, 0x12, 0x3e, 0x0a,
	0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a,
	0x04, 0x6d, 0x71, 0x74, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x61,
	0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x4d, 0x71, 0x74, 0x74, 0x52, 0x04, 0x6d, 0x71, 0x74, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x67,
	0x62, 0x32, 0x38, 0x31, 0x38, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69,
	0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x47, 0x62, 0x32,
	0x38, 0x31, 0x38, 0x31, 0x52, 0x07, 0x67, 0x62, 0x32, 0x38, 0x31, 0x38, 0x31, 0x1a, 0xfa, 0x01,
	0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61,
	0x78, 0x5f, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x6d,
	0x61, 0x78, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x6e, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x1a, 0xc5, 0x01, 0x0a, 0x05, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x64, 0x62, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x1a, 0xba, 0x03, 0x0a, 0x03, 0x4f, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x05, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x61, 0x73, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4f,
	0x73, 0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x77, 0x73, 0x5f, 0x73, 0x33, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x73, 0x73, 0x2e, 0x41, 0x77, 0x73, 0x53, 0x33,
	0x48, 0x00, 0x52, 0x05, 0x61, 0x77, 0x73, 0x53, 0x33, 0x1a, 0x3a, 0x0a, 0x05, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x80, 0x02, 0x0a, 0x05, 0x41, 0x77, 0x73, 0x53, 0x33, 0x12,
	0x0e, 0x0a, 0x02, 0x61, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x61, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6b, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61,
	0x63, 0x65, 0x44, 0x69, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x6f, 0x73, 0x73, 0x1a,
	0xa0, 0x01, 0x0a, 0x02, 0x4d, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0xb8, 0x03, 0x0a, 0x0a, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6b, 0x75, 0x62, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x13, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x61, 0x73,
	0x65, 0x44, 0x69, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x66,
	0x6d, 0x70, 0x65, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x46, 0x66, 0x6d, 0x70, 0x65, 0x67, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x70, 0x75, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x70,
	0x75, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x10,
	0x67, 0x70, 0x75, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x67, 0x70, 0x75, 0x4f, 0x70, 0x65, 0x6e, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x40, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69,
	0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x0b, 0x68, 0x6f, 0x73,
	0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x79,
	0x62, 0x6f, 0x78, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x62, 0x75, 0x73, 0x79, 0x62, 0x6f, 0x78, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x39, 0x0a,
	0x09, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x52, 0x0a, 0x04, 0x4d, 0x71, 0x74, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xae, 0x02, 0x0a,
	0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x46, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a,
	0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x77, 0x74, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x77, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x40, 0x0a, 0x0e, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xda, 0x01,
	0x0a, 0x03, 0x49, 0x41, 0x4d, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2f, 0x0a,
	0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69,
	0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x61, 0x6d, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x69, 0x61, 0x6d, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x61, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x61, 0x63, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x09, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x46, 0x0a, 0x04, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x6b, 0x38, 0x73, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x65, 0x63, 0x78, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x65, 0x63, 0x78, 0x5f, 0x76, 0x73, 0x73, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x73, 0x6f, 0x70, 0x68, 0x67, 0x6f, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x6d, 0x69,
	0x78, 0x10, 0x05, 0x22, 0x9f, 0x01, 0x0a, 0x07, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70,
	0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x61, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x61, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x61, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x09, 0x59, 0x74, 0x78, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x61, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x73, 0x6b, 0x22, 0x25, 0x0a, 0x09, 0x57, 0x61, 0x72, 0x6e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xd5, 0x01, 0x0a, 0x08,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x35, 0x0a, 0x04,
	0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x61, 0x73,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x2e, 0x55, 0x72, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x75,
	0x72, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x71, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x71, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x55, 0x72,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x8b, 0x01, 0x0a, 0x07, 0x56, 0x73, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x22, 0x31, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x4f, 0x75, 0x74, 0x22, 0x1c, 0x0a, 0x06, 0x53, 0x6f, 0x70, 0x68, 0x67, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x22, 0x6a, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x69, 0x61,
	0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4d, 0x56, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x56, 0x53, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x01, 0x22, 0xb5,
	0x02, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x37,
	0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x69, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9c, 0x01, 0x0a, 0x08, 0x52, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6d, 0x62, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x62,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x22, 0x43, 0x0a, 0x07, 0x47, 0x62, 0x32, 0x38, 0x31, 0x38,
	0x31, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x67, 0x62, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x47, 0x62, 0x69, 0x64, 0x42, 0x2b, 0x5a, 0x29, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x74, 0x79, 0x75, 0x6e, 0x63, 0x64, 0x6e, 0x2e, 0x63,
	0x6e, 0x2f, 0x69, 0x61, 0x73, 0x2f, 0x69, 0x61, 0x73, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_coreconf_proto_rawDescOnce sync.Once
	file_coreconf_proto_rawDescData = file_coreconf_proto_rawDesc
)

func file_coreconf_proto_rawDescGZIP() []byte {
	file_coreconf_proto_rawDescOnce.Do(func() {
		file_coreconf_proto_rawDescData = protoimpl.X.CompressGZIP(file_coreconf_proto_rawDescData)
	})
	return file_coreconf_proto_rawDescData
}

var file_coreconf_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_coreconf_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_coreconf_proto_goTypes = []interface{}{
	(Scheduler_Mode)(0),         // 0: ias_core.conf.Scheduler.Mode
	(Service_ServiceName)(0),    // 1: ias_core.conf.Service.ServiceName
	(*Bootstrap)(nil),           // 2: ias_core.conf.Bootstrap
	(*Data)(nil),                // 3: ias_core.conf.Data
	(*Auth)(nil),                // 4: ias_core.conf.Auth
	(*IAM)(nil),                 // 5: ias_core.conf.IAM
	(*Scheduler)(nil),           // 6: ias_core.conf.Scheduler
	(*OpenApi)(nil),             // 7: ias_core.conf.OpenApi
	(*YtxClient)(nil),           // 8: ias_core.conf.YtxClient
	(*WarnAlert)(nil),           // 9: ias_core.conf.WarnAlert
	(*Callback)(nil),            // 10: ias_core.conf.Callback
	(*VssSign)(nil),             // 11: ias_core.conf.VssSign
	(*AgentExtend)(nil),         // 12: ias_core.conf.AgentExtend
	(*Sophgo)(nil),              // 13: ias_core.conf.Sophgo
	(*Service)(nil),             // 14: ias_core.conf.Service
	(*Log)(nil),                 // 15: ias_core.conf.Log
	(*Gb28181)(nil),             // 16: ias_core.conf.Gb28181
	(*Data_Database)(nil),       // 17: ias_core.conf.Data.Database
	(*Data_Redis)(nil),          // 18: ias_core.conf.Data.Redis
	(*Data_Oss)(nil),            // 19: ias_core.conf.Data.Oss
	(*Data_Mq)(nil),             // 20: ias_core.conf.Data.Mq
	(*Data_Kubernetes)(nil),     // 21: ias_core.conf.Data.Kubernetes
	(*Data_HostAlias)(nil),      // 22: ias_core.conf.Data.HostAlias
	(*Data_Mqtt)(nil),           // 23: ias_core.conf.Data.Mqtt
	(*Data_Oss_Local)(nil),      // 24: ias_core.conf.Data.Oss.Local
	(*Data_Oss_AwsS3)(nil),      // 25: ias_core.conf.Data.Oss.AwsS3
	nil,                         // 26: ias_core.conf.Callback.UrlsEntry
	(*Log_Rotation)(nil),        // 27: ias_core.conf.Log.Rotation
	(*durationpb.Duration)(nil), // 28: google.protobuf.Duration
}
var file_coreconf_proto_depIdxs = []int32{
	3,  // 0: ias_core.conf.Bootstrap.data:type_name -> ias_core.conf.Data
	4,  // 1: ias_core.conf.Bootstrap.auth:type_name -> ias_core.conf.Auth
	6,  // 2: ias_core.conf.Bootstrap.scheduler:type_name -> ias_core.conf.Scheduler
	7,  // 3: ias_core.conf.Bootstrap.open_api:type_name -> ias_core.conf.OpenApi
	8,  // 4: ias_core.conf.Bootstrap.ytx_client:type_name -> ias_core.conf.YtxClient
	9,  // 5: ias_core.conf.Bootstrap.warn_alert:type_name -> ias_core.conf.WarnAlert
	10, // 6: ias_core.conf.Bootstrap.callback:type_name -> ias_core.conf.Callback
	11, // 7: ias_core.conf.Bootstrap.vss_sign:type_name -> ias_core.conf.VssSign
	12, // 8: ias_core.conf.Bootstrap.agent_extend:type_name -> ias_core.conf.AgentExtend
	15, // 9: ias_core.conf.Bootstrap.log:type_name -> ias_core.conf.Log
	13, // 10: ias_core.conf.Bootstrap.sophgo:type_name -> ias_core.conf.Sophgo
	14, // 11: ias_core.conf.Bootstrap.service:type_name -> ias_core.conf.Service
	5,  // 12: ias_core.conf.Bootstrap.iam:type_name -> ias_core.conf.IAM
	17, // 13: ias_core.conf.Data.database:type_name -> ias_core.conf.Data.Database
	18, // 14: ias_core.conf.Data.redis:type_name -> ias_core.conf.Data.Redis
	19, // 15: ias_core.conf.Data.oss:type_name -> ias_core.conf.Data.Oss
	20, // 16: ias_core.conf.Data.mq:type_name -> ias_core.conf.Data.Mq
	21, // 17: ias_core.conf.Data.kubernetes:type_name -> ias_core.conf.Data.Kubernetes
	23, // 18: ias_core.conf.Data.mqtt:type_name -> ias_core.conf.Data.Mqtt
	16, // 19: ias_core.conf.Data.gb28181:type_name -> ias_core.conf.Gb28181
	28, // 20: ias_core.conf.Auth.access_expiration:type_name -> google.protobuf.Duration
	28, // 21: ias_core.conf.Auth.refresh_expiration:type_name -> google.protobuf.Duration
	28, // 22: ias_core.conf.Auth.captcha_expire:type_name -> google.protobuf.Duration
	18, // 23: ias_core.conf.IAM.redis:type_name -> ias_core.conf.Data.Redis
	0,  // 24: ias_core.conf.Scheduler.mode:type_name -> ias_core.conf.Scheduler.Mode
	26, // 25: ias_core.conf.Callback.urls:type_name -> ias_core.conf.Callback.UrlsEntry
	1,  // 26: ias_core.conf.Service.name:type_name -> ias_core.conf.Service.ServiceName
	27, // 27: ias_core.conf.Log.rotation:type_name -> ias_core.conf.Log.Rotation
	28, // 28: ias_core.conf.Data.Database.conn_max_lifetime:type_name -> google.protobuf.Duration
	28, // 29: ias_core.conf.Data.Redis.read_timeout:type_name -> google.protobuf.Duration
	28, // 30: ias_core.conf.Data.Redis.write_timeout:type_name -> google.protobuf.Duration
	24, // 31: ias_core.conf.Data.Oss.local:type_name -> ias_core.conf.Data.Oss.Local
	25, // 32: ias_core.conf.Data.Oss.aws_s3:type_name -> ias_core.conf.Data.Oss.AwsS3
	22, // 33: ias_core.conf.Data.Kubernetes.host_aliases:type_name -> ias_core.conf.Data.HostAlias
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_coreconf_proto_init() }
func file_coreconf_proto_init() {
	if File_coreconf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_coreconf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bootstrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IAM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scheduler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YtxClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarnAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Callback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VssSign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sophgo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gb28181); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Redis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Oss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Mq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Kubernetes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_HostAlias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Mqtt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Oss_Local); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Oss_AwsS3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coreconf_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log_Rotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_coreconf_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*Data_Oss_Local_)(nil),
		(*Data_Oss_AwsS3_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coreconf_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_coreconf_proto_goTypes,
		DependencyIndexes: file_coreconf_proto_depIdxs,
		EnumInfos:         file_coreconf_proto_enumTypes,
		MessageInfos:      file_coreconf_proto_msgTypes,
	}.Build()
	File_coreconf_proto = out.File
	file_coreconf_proto_rawDesc = nil
	file_coreconf_proto_goTypes = nil
	file_coreconf_proto_depIdxs = nil
}
